const nt="ENTRIES",V="KEYS",T="VALUES",p="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=z(this._path);if(z(s)===p)return{done:!1,value:this.result()};const n=t.get(z(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=z(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>z(t)).filter(t=>t!==p).join("")}value(){return z(this._path).node.get(p)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const z=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===p){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const m=c[l],f=i*d,g=f-i;let a=o[f];const F=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=F;_<y;++_){const b=m!==t[_],E=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(E,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=M(n);for(const i of o.keys())if(i!==p&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(p):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(p)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(p,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(p,s(n.get(p))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let o=n.get(p);return o===void 0&&n.set(p,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==p&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==p&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==p&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(p),s.size===0)$(n);else if(s.size===1){const[o,u]=s.entries().next().value;R(n,o,u)}}},$=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)$(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==p&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=M(e);n.set(o+t,s),n.delete(o)},M=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,B="or",q="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[B]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:B,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},mt={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},pt={...mt,...U};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?pt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},K=(e,t=B)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},S=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],m=o.get(l);if(m==null)continue;let f=m.size;const g=e._avgFieldLength[l];for(const a of m.keys()){if(!e._documentIds.has(a)){At(e,l,a,s),f-=1;continue}const F=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!F)continue;const y=m.get(a),_=e._fieldLength.get(a)[l],b=dt(y,f,e._documentCount,_,g,r),E=n*d*F*b,A=h.get(a);if(A){A.score+=E,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:E,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,F)=>({...a,[F]:G(n.boost,F)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),m=S(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,F=a<1?Math.min(r,Math.round(t.term.length*a)):a;F&&(g=e._index.fuzzyGet(t.term,F))}if(f)for(const[a,F]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);S(e,t.term,a,_,F,o,u,h,m)}if(g)for(const a of g.keys()){const[F,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);S(e,t.term,a,_,F,o,u,h,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(m=>X(e,m,d));return K(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(at(i)).map(d=>Ct(e,d,i));return K(c,i.combineWith)},Y=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(N),o},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Y(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(N),o},Et=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[m,f]of l._documentIds)l._idToShortId.set(f,m);for(const[m,f]of e){const g=new Map;for(const a of Object.keys(f)){let F=f[a];c===1&&(F=F.ds),g.set(parseInt(a,10),k(F))}l._index.set(m,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),et=(e,t,s={})=>{const n={};return Y(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:m}=n[d]??={title:"",contents:[]};if(h)m.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&m.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(F=>j(g,F)).filter(F=>F!==null);a.length&&m.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>u.contents.reduce((i,[,r])=>i+r,0)-o.contents.reduce((i,[,r])=>i+r,0)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>zt(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":96,\"nextId\":96,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-729fc2e0\",\"2\":\"v-729fc2e0@0\",\"3\":\"v-729fc2e0@1\",\"4\":\"v-184f4da6\",\"5\":\"v-b435f124\",\"6\":\"v-b435f124@0\",\"7\":\"v-b435f124@1\",\"8\":\"v-4d0f8299\",\"9\":\"v-4d0f8299@0\",\"10\":\"v-4d0f8299@1\",\"11\":\"v-5e17f5bb\",\"12\":\"v-5e17f5bb#准备\",\"13\":\"v-5e17f5bb#windows-to-go\",\"14\":\"v-5e17f5bb#linux-to-go\",\"15\":\"v-5e17f5bb#ventoy\",\"16\":\"v-5e17f5bb#最终配置\",\"17\":\"v-5e17f5bb@0\",\"18\":\"v-5e17f5bb@1\",\"19\":\"v-281d014c\",\"20\":\"v-281d014c#远程桌面\",\"21\":\"v-281d014c#远程唤醒\",\"22\":\"v-281d014c#踩过的坑\",\"23\":\"v-281d014c#没有电源管理\",\"24\":\"v-281d014c#能收到封包-但是无法正常开机\",\"25\":\"v-281d014c@0\",\"26\":\"v-281d014c@1\",\"27\":\"v-e15d00a0\",\"28\":\"v-e15d00a0@0\",\"29\":\"v-e15d00a0@1\",\"30\":\"v-0528c025\",\"31\":\"v-0528c025@0\",\"32\":\"v-0528c025@1\",\"33\":\"v-e145a3f8\",\"34\":\"v-e145a3f8@0\",\"35\":\"v-e145a3f8@1\",\"36\":\"v-5bff1266\",\"37\":\"v-5bff1266@0\",\"38\":\"v-5bff1266@1\",\"39\":\"v-2bdcd02e\",\"40\":\"v-2bdcd02e@0\",\"41\":\"v-2bdcd02e@1\",\"42\":\"v-7a094b4c\",\"43\":\"v-7a094b4c#封装axios\",\"44\":\"v-7a094b4c#初步封装\",\"45\":\"v-7a094b4c#请求拦截器\",\"46\":\"v-7a094b4c#响应拦截器\",\"47\":\"v-7a094b4c#post方法\",\"48\":\"v-7a094b4c#get方法\",\"49\":\"v-7a094b4c#del方法\",\"50\":\"v-7a094b4c#put方法\",\"51\":\"v-7a094b4c#post上传文件\",\"52\":\"v-7a094b4c#管理api\",\"53\":\"v-7a094b4c#api分组\",\"54\":\"v-7a094b4c#api整合\",\"55\":\"v-7a094b4c#使用\",\"56\":\"v-7a094b4c@0\",\"57\":\"v-7a094b4c@1\",\"58\":\"v-3543f731\",\"59\":\"v-3543f731@0\",\"60\":\"v-3543f731@1\",\"61\":\"v-1f02d427\",\"62\":\"v-1f02d427@0\",\"63\":\"v-1f02d427@1\",\"64\":\"v-1b8cffba\",\"65\":\"v-1b8cffba#安装git\",\"66\":\"v-1b8cffba#配置用户\",\"67\":\"v-1b8cffba#收集git公钥\",\"68\":\"v-1b8cffba#初始化git仓库\",\"69\":\"v-1b8cffba#禁用远程登录\",\"70\":\"v-1b8cffba#克隆仓库\",\"71\":\"v-1b8cffba@0\",\"72\":\"v-1b8cffba@1\",\"73\":\"v-575d82d0\",\"74\":\"v-575d82d0#git-hooks\",\"75\":\"v-575d82d0#脚本编写\",\"76\":\"v-575d82d0#husky\",\"77\":\"v-575d82d0#nginx配置\",\"78\":\"v-575d82d0@0\",\"79\":\"v-575d82d0@1\",\"80\":\"v-02f6668b\",\"81\":\"v-02f6668b#树的深度\",\"82\":\"v-02f6668b#所有子树的深度之和\",\"83\":\"v-02f6668b#所有结点及其子树的深度之和\",\"84\":\"v-02f6668b#树上任意一个点到其他所有结点的距离之和\",\"85\":\"v-02f6668b@0\",\"86\":\"v-02f6668b@1\",\"87\":\"v-5043e3ba\",\"88\":\"v-e1e3da16\",\"89\":\"v-3d1aaceb\",\"90\":\"v-0fae2096\",\"91\":\"v-6b0f271a\",\"92\":\"v-051359c7\",\"93\":\"v-7b9d43ec\",\"94\":\"v-5ba1127a\",\"95\":\"v-bbc0a72c\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2,3],\"2\":[null,null,1],\"3\":[null,null,1],\"4\":[1,4],\"5\":[1,4],\"6\":[null,null,1],\"7\":[null,null,2],\"8\":[1,94],\"9\":[null,null,1],\"10\":[null,null,2],\"11\":[1,13],\"12\":[1,11],\"13\":[3,20],\"14\":[3,38],\"15\":[1,6],\"16\":[1,147],\"17\":[null,null,1],\"18\":[null,null,5],\"19\":[1,11],\"20\":[1,78],\"21\":[1,127],\"22\":[1],\"23\":[1,13],\"24\":[2,17],\"25\":[null,null,1],\"26\":[null,null,2],\"27\":[2],\"28\":[null,null,3],\"29\":[null,null,2],\"30\":[2],\"31\":[null,null,3],\"32\":[null,null,2],\"33\":[2],\"34\":[null,null,3],\"35\":[null,null,2],\"36\":[2],\"37\":[null,null,3],\"38\":[null,null,2],\"39\":[2],\"40\":[null,null,3],\"41\":[null,null,2],\"42\":[1,14],\"43\":[1,11],\"44\":[1,20],\"45\":[1,28],\"46\":[1,29],\"47\":[1,27],\"48\":[1,26],\"49\":[1,27],\"50\":[1,27],\"51\":[1,85],\"52\":[1,1],\"53\":[1,39],\"54\":[1,17],\"55\":[1,33],\"56\":[null,null,2],\"57\":[null,null,5],\"58\":[1,149],\"59\":[null,null,3],\"60\":[null,null,5],\"61\":[1,151],\"62\":[null,null,3],\"63\":[null,null,5],\"64\":[1,16],\"65\":[1,7],\"66\":[1,11],\"67\":[1,38],\"68\":[1,28],\"69\":[1,28],\"70\":[1,17],\"71\":[null,null,2],\"72\":[null,null,1],\"73\":[2,9],\"74\":[2,13],\"75\":[1,95],\"76\":[1,128],\"77\":[1,50],\"78\":[null,null,2],\"79\":[null,null,2],\"80\":[1,24],\"81\":[1,22],\"82\":[1,1],\"83\":[1,1],\"84\":[1,1],\"85\":[null,null,1],\"86\":[null,null,3],\"87\":[1],\"88\":[1],\"89\":[1],\"90\":[1],\"91\":[1],\"92\":[1],\"93\":[1],\"94\":[1],\"95\":[1]},\"averageFieldLength\":[1.2588394034776562,31.034222138865672,1.7134691048775121],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"h\":\"Hello World\",\"t\":[\"此博客用来记录学习的笔记和快乐的debug过程\",\"正在持续更新中...\"]},\"2\":{\"c\":[\"笔记\"]},\"3\":{\"c\":[\"介绍\"]},\"4\":{\"h\":\"个人介绍\",\"t\":[\"一个在读的大烂王\",\"go批 瓦真好玩\",\"一个月能写一篇文章就是胜利✌️\"]},\"5\":{\"h\":\"VSCode远程连接免输密码\",\"t\":[\"VSCode的远程属实是舒服，但是每次新建一个连接就要输密码，对于我这种经常开一堆窗口的人来说是非常不便利的，免密登录才是王道\"]},\"6\":{\"c\":[\"瞎折腾\"]},\"7\":{\"c\":[\"远程连接\",\"服务器\"]},\"8\":{\"h\":\"Windows无线网络突然消失\",\"t\":[\"这是一次离谱的Windows无线网络突然消失事件的记录，死去的软件也能跑来背刺？\",\"前两天遇见了一个很离奇的情况，同学的电脑突然没有无线连接了，起初我也是见怪不怪了，windows网卡驱动掉了不是很正常的事嘛\",\"一般来说有这几种解决办法：\",\"Windows发癫了，重启一下\",\"驱动有问题了\",\"这种情况就直接上官网找驱动就好，自己不会的可以去另一个设备上下个驱动精灵网卡版（万不得已的选项，这软件最初还是很好的，后来越来越向流氓靠拢，用完记得删了）\",\"更新的系统和驱动不兼容\",\"这种情况要么回退，要么更新驱动，当然一般回退的情况比较多。\",\"网卡接触不良\",\"这个也比较简单，拆开看下就好了\",\"驱动程序冲突\",\"具体思路就是排查，等下遇见具体的再说\",\"实际知道问题了都好说，但是就是不知道问题，据当事人说法，吃饭前还在打游戏，吃饭回来就没网了，这事听起来也是离奇，上边的1、3都试了，吃个饭的时间Windows也不至于自己安了几个软件程序造成冲突吧（不排除这个想法，可能性也不是无），思路一下就断了，差那么一点就走上重装的不归路了，这时突然找到了一个帖子，说vmware workstation的存在可能会导致无线网卡驱动错误，可是他已经在好久之前卸载了这个软件，好不容易找到的思路又断了\",\"就在即将要重装时，又去看了一眼设备的状态信息，突然发现了一条之前从来没注意过的信息：windows仍在设置此设备的类配置（代码：56）\",\"好家伙，关键信息，去搜了一下，发现微软社区早在18年就有关于这个问题的解决，具体看这里\",\"这个问题还真就和vmware有关系，离离原上谱，一个删了好久的软件还能对windows造成伤害。\",\"应该是卸载时的问题，没有彻底卸载，注册表还有残留，导致驱动程序出现了问题\",\"直接去注册表里找到\",\"HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318} HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\NetworkSetup2\\\\Services \",\"中的{49444745-4252-4554-79AC-EA6CADE4227F}项，删除重装网卡驱动就好\",\"这个操作需要用到Nsudo，否则没有权限访问Services\",\"解决这块参考了四海一叶秋大神的回答，回答中也有问题的复现\",\"所以，卸载软件能用专用的卸载器就用吧，就算手动也要删干净，别把文件夹删了就拍屁股走人了，说不定哪天你的注册表就在你晋级赛的时候狠狠的背刺你了😆\"]},\"9\":{\"c\":[\"瞎折腾\"]},\"10\":{\"c\":[\"Windows\",\"网卡\"]},\"11\":{\"h\":\"使用256G洋垃圾打造3合1移动硬盘\",\"t\":[\"某天刷视频刷到用U盘打造多合一多功能U盘，突发奇想，去咸鱼捡了一块256G的2230硬盘，又上pdd买了一个2230硬盘盒，准备搞一个包含了Windows TOGO、Linux TOGO的一个启动盘，写这篇文章就是为了记录下过程，以供以后参考（我太清楚我的记忆能力了，不过十天保准忘的干干净净）\"]},\"12\":{\"h\":\"准备\",\"t\":[\"Win10或Win11镜像，这里推荐精简版的，win10精简版可以到这里下载\",\"任意linux发行版，我这里用的是Ubuntu22.04\",\"WTG辅助工具\",\"VirtualBox\",\"Ventoy安装程序\",\"vhdboot\",\"vtoyboot\"]},\"13\":{\"h\":\"Windows To Go\",\"t\":[\"首先打开WTG辅助工具，选择镜像路径，再选择安装的位置，一定看准硬盘是不是要安装的那一块\",\"然后可以按照如图配置\",\"这里的屏蔽本机磁盘我没有开启，开启之后在wintogo中就没办法看到本机的其他磁盘的内容了\",\"我的硬盘是256G的，所以我分了100G给了wintogo这里因人而异，但也不建议小于60G\",\"剩余的配置项默认就好，如果想进行设置，可以参考这里，之后点击部署即可\",\"完成后重启，选择从这块硬盘启动并完成wintogo的初始化，这步一定要有，否则会系统无法启动\",\"之后将硬盘中的wtg.vhdx拷贝出来备用\"]},\"14\":{\"h\":\"Linux To go\",\"t\":[\"打开VirtualBox，新建虚拟机\",\"文件夹改为你要放虚拟机信息的地址，虚拟光盘设为系统镜像文件\",\"这里一定要启用EFI\",\"选择一个保存vdi的位置，这个要记好，然后大小看自己，一般为40G，当然你要空间比较大，随意就好，一定要选上预先分配全部空间\",\"然后就可以启动系统开始安装系统了，安装完成后，将下好的vtoyboot.iso拷贝到虚拟机中，方法很多，ftp，共享文件夹都可以\",\"然后在虚拟机中解压得到vtoyboot.sh，使用命令sudo bash vtoyboot.sh即可，执行成功后关机\",\"不会解压iso文件的看这里 当然，还有更简单的，在windows下解压好后直接将sh文件发到虚拟机中\",\"然后找到你的vdi保存位置，建议备份一下，然后将文件后缀名改为.vtoy，这里推荐直接在后边加.vtoy，如xxx.vdi.vtoy，备用\"]},\"15\":{\"h\":\"Ventoy\",\"t\":[\"首先将U盘格式化为NTFS格式，打开Ventoy2Disk\",\"选择设备后直接安装即可\",\"至此，所有准备工作都以完成，现在来完成最终的配置\"]},\"16\":{\"h\":\"最终配置\",\"t\":[\"配置项里的东西在ventoy官网都有很详细的解释，不懂的可以去官网查看\",\"{ // Ventoy基本配置 \\\"control\\\":[ { \\\"VTOY_DEFAULT_MENU_MODE\\\": \\\"1\\\" }, { \\\"VTOY_TREE_VIEW_MENU_STYLE\\\": \\\"1\\\" }, { \\\"VTOY_FILE_FLT_EFI\\\": \\\"1\\\" }, { \\\"VTOY_MENU_TIMEOUT\\\": \\\"30\\\" }, { \\\"VTOY_SECONDARY_TIMEOUT\\\": \\\"20\\\" }, { \\\"VTOY_MENU_LANGUAGE\\\": \\\"zh_CN\\\" }, { \\\"VTOY_DEFAULT_SEARCH_ROOT\\\": \\\"/images\\\" } ], // 主题，各种主题可以在https://www.gnome-look.org/browse?cat=109&tag=ventoy这里下载 // 下载完之后放到 U盘里即可，具体下边的路径就根据自己的来写，反正是找到themem.txt文件就行 // 这里的默认根路径是 '/'，即 U盘根目录 \\\"theme\\\":{ \\\"file\\\": \\\"/ventoy/themes/bigsur/theme.txt\\\", \\\"gfxmode\\\": \\\"1920x1080\\\", \\\"ventoy_color\\\": \\\"#eff0f1\\\", \\\"fonts\\\":[ \\\"/ventoy/themes/bigsur/terminus-12.pf2\\\", \\\"/ventoy/themes/bigsur/terminus-14.pf2\\\", \\\"/ventoy/themes/bigsur/terminus-16.pf2\\\", \\\"/ventoy/themes/bigsur/DejaVuSans-48.pf2\\\", \\\"/ventoy/themes/bigsur/DejaVuSans-Regular-14.pf2\\\" ] }, // 镜像目录，也就是你能看到的，这个顺序无所谓，启动时会按字母顺序升序显示 \\\"menu_alias\\\":[ { \\\"image\\\": \\\"/images/WinTOGO.vhdx\\\", \\\"alias\\\": \\\"Windows10 TOGO\\\" }, { \\\"image\\\": \\\"/images/Edgeless_Beta_4.1.0.iso\\\", \\\"alias\\\": \\\"Edgeless\\\" }, { \\\"image\\\": \\\"/images/zh-cn_windows_10_consumer_editions_version_22h2_updated_july_2023_x64_dvd_0ee9325c.iso\\\", \\\"alias\\\": \\\"Windows 10\\\" }, { \\\"image\\\": \\\"/images/zh-cn_windows_11_consumer_editions_version_22h2_updated_july_2023_x64_dvd_f69501d4.iso\\\", \\\"alias\\\": \\\"Windows 11\\\" }, { \\\"image\\\": \\\"/images/CentOS-8.1.1911-x86_64-dvd1.iso\\\", \\\"alias\\\": \\\"CentOS 8\\\" }, { \\\"image\\\": \\\"/images/ubuntu-22.04.2-desktop-amd64.iso\\\", \\\"alias\\\": \\\"Ubuntu 22.04\\\" }, { \\\"image\\\": \\\"/images/archlinux-2023.08.01-x86_64.iso\\\", \\\"alias\\\": \\\"Arch Linux\\\" }, { \\\"image\\\": \\\"/images/kali-linux-2023.2a-installer-amd64.iso\\\", \\\"alias\\\": \\\"Kali Linux\\\" }, { \\\"image\\\": \\\"/images/UbuntuTOGO.vdi.vtoy\\\", \\\"alias\\\": \\\"Ubuntu 22.04 TOGO\\\" } ], // 分类，主要是用于图标的显示，他会从上到下匹配key，如果匹配到就会把这个镜像归为这个类 // 匹配用的主要是上边的alias // 具体匹配可以看这里https://www.ventoy.net/cn/plugin_menuclass.html \\\"menu_class\\\":[ { \\\"key\\\": \\\"kubuntu\\\", \\\"class\\\": \\\"kubuntu\\\" }, { \\\"key\\\": \\\"ubuntu\\\", \\\"class\\\": \\\"ubuntu\\\" }, { \\\"key\\\": \\\"UbuntuTOGO\\\", \\\"class\\\": \\\"ubuntu\\\" }, { \\\"key\\\": \\\"pop-os\\\", \\\"class\\\": \\\"pop-os\\\" }, { \\\"key\\\": \\\"arch\\\", \\\"class\\\": \\\"arch\\\" }, { \\\"key\\\": \\\"linuxmint\\\", \\\"class\\\": \\\"linuxmint\\\" }, { \\\"key\\\": \\\"opensuse\\\", \\\"class\\\": \\\"opensuse\\\" }, { \\\"key\\\": \\\"elementary\\\", \\\"class\\\": \\\"elementary\\\" }, { \\\"key\\\": \\\"manjaro\\\", \\\"class\\\": \\\"manjaro\\\" }, { \\\"key\\\": \\\"debian\\\", \\\"class\\\": \\\"debian\\\" }, { \\\"key\\\": \\\"deepin\\\", \\\"class\\\": \\\"deepin\\\" }, { \\\"key\\\": \\\"solus\\\", \\\"class\\\": \\\"solus\\\" }, { \\\"key\\\": \\\"zorin-os\\\", \\\"class\\\": \\\"zorin-os\\\" }, { \\\"key\\\": \\\"windows\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"hirens\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"win\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"Windows10 TOGO\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"WinTOGO\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"kali-linux\\\", \\\"class\\\": \\\"kali\\\" }, { \\\"key\\\": \\\"Edgeless\\\", \\\"class\\\": \\\"windows\\\" }, { \\\"key\\\": \\\"CentOS-8.1.1911\\\", \\\"class\\\": \\\"gnu-linux\\\" }, { \\\"key\\\": \\\"iso\\\", \\\"class\\\": \\\"iso\\\" } ] } \"]},\"17\":{\"c\":[\"瞎折腾\"]},\"18\":{\"c\":[\"启动盘\",\"Windows TOGO\",\"Linux TOGO\",\"Ventoy\"]},\"19\":{\"h\":\"平板+Windows实现远程唤醒+远程桌面\",\"t\":[\"心心念念的平板终于到手了，是时候该给电脑包收起来了😄\",\"众所周知，游戏本性能很好，但是重量很大，且很容易没有电，所以每次出门都需要带上电脑和适配器，再加上其他东西，每天都要背个快5公斤的包做负重训练\",\"这时候，就体现出平板加远程桌面的优势了\"]},\"20\":{\"h\":\"远程桌面\",\"t\":[\"这个还是比较好实现的，用微软官方的Remote Desktop（在app store中貌似叫Remote Desktop Client）即可，直接去play商店下载就可以了，或者手机或者平板自带的应用商店也可以（一般都有，不排除二般情况，应用商店没且play商店访问不了可以试一试图中在“在更多设备安装”按钮下的的其他商店里找一找）\",\"与此同时我们先进行Windows的设置，进入设置->系统->远程桌面，将远程桌面打开即可\",\"Remote Desktop下载好以后打开，点击新建\",\"然后输入的电脑的ip即可，如果不清楚，可以打开cmd（Win+R），输入ipconfig，找到你上网使用的网卡，IPv4地址即为电脑内网ip，保存即可\",\"好了现在可以远程了，但是问题出来了，在宿舍我貌似不需要这个，我需要在校园里使用，这时候就需要修改路由器的设置\",\"以水星路由器为例，使用ip或者melogin.cn进入后台管理，进入高级设置->网络参数->IP与Mac绑定，找到你电脑的ip点击绑定即可\",\"点击高级设置->高级用户->虚拟服务器->添加，内部端口为3389，ip地址为电脑ip，外部端口随意，找一个自己好记的就行\",\"再回到网络设置->WAN口参数->基本设置中的IP地址即为学校内网IP，也可以在学校认证界面查看，这个IP地址可能会变化，不过周期很长\",\"再次回到Remote Desktop进行连接即可，不过这次的IP地址需要为学校的内网IP加上你设置的外部端口号，例如10.12.0.22:3384，这样就可以了\",\"现在我可以抱着板子在学校任意一个地方连接我的电脑了，当然从理论上讲，配置一下路由器的ddns我还可以从外网访问，不过免费的版本体验可能会不如ToDesk，这是其一，最重要的还是水星的这个ddns我一直没有给配成功，等我在摸索摸索，总之感觉水星加上花生壳等于一坨谢特\",\"下来又有一个问题，如果人不在寝室，电脑还没开机，那不是更完蛋了，总不至于为了用电脑再跑回宿舍吧\"]},\"21\":{\"h\":\"远程唤醒\",\"t\":[\"这个远程唤醒我可谓是踩了一万个坑，感觉该遇上和不该遇上的都让我遇上了，先说下过程吧\",\"首先说下，远程唤醒只支持有线网络连接，没有网线的就不要再折腾了\",\"过程很简单，首先，去到BIOS里，因为版本不一样会有好多叫法，这里就说下找什么，找带有\",\"WAKE ON LAN BOOT ON LAN WAKE UP BY PCI-E ...... \",\"字样的就可以\",\"总之就是，看见带个唤醒的就给他开开（看清楚再开，大致意思是通过网络或者PCI-E唤醒的之类的就开开，开错了不背锅奥）\",\"以我的机械革命为例吧，把Advanced中有个WAKE ON LAN选线，以及在BOOT中有个BOOT ON LAN选项（这个不确定用不用开，太懒了没去试，但是后来在解决其他问题的时候发现有帖子会说把他开开）都设置为Enable就行了\",\"然后进到Windows中，打开设备管理器（右键此电脑就有，找不到就直接进设置搜索）\",\"找到你的有线网卡，双击打开属性（或者右键，点击属性），点击上方的高级，将关机 网络唤醒和魔术封包唤醒的值都设置为开启\",\"然后点击，电源管理，把三个全勾上（没有电源管理怎么办，别急，在下边的踩坑点中有解决办法）\",\"至此为止，你理论上就可以进行远程开机了\",\"下边我们来进行测试\",\"每次开关机测试很麻烦，我们不如直接检测一下电脑是否收到封包，这里就用到WakeOnLan这个软件(密码asdb)\",\"这个软件是来自DCchen写的文章「系统」使用网络唤醒计算机中提到的，如果这篇文章的链接失效了，可以去这篇文章中下载\",\"安装WakeOnLan，完成后打开，点击封包监控诊断工具\",\"在此界面即可\",\"接下来去移动设备上安装一个远程唤醒软件，这里我用的是WolOn - Wake on LAN Widgets\",\"打开之后点击右下的加号，从上往下第一个为从局域网外唤醒，第二个为从局域网内唤醒\",\"我们先从局域网内看起\",\"有了之前配置远程桌面的经验，这些东西不难拿到，这个网关地址不确定的话就在填写完IP地址后点击网关输入框右边的一个不知道是什么的小图标，他就会帮你填上，完成后点击save即可，剩下的都不要配置\",\"然后我们就可以开始测试了\",\"点击主页中的配置，如果没有配置信息，看一下右上方你选择的是LAN还是WAN，LAN为局域网内，WAN为局域网外\",\"直接点击配置项就可向电脑发送开机信号，这时再回到封包监控诊断工具，如果此时工具中显示出收到好多封包，那么恭喜你，你目前已经理论上成功了，如果没有，这时候你就要查一下你电脑的IP地址是否变化了，然后你可以关机进行下测试了，如果正常开机，那么恭喜你，你彻彻底底的成功了，如果不能正常开机，你可以看下下边的踩坑点中是否有你的情况。\",\"之后我们就可以进行局域网外的配置了，同样的，先进入路由器管理界面，进入高级设置->高级用户->虚拟服务器->添加，内部端口为9，IP地址为你电脑地址，外部端口随意\",\"然后就可以去平板上添加配置了，这次添加的是局域网外的配置，要选择最上边的选项\",\"这次的区别就是，IP地址这一栏填的是你在网络设置->WAN口参数->基本设置中的IP地址，端口为你设置的外部端口，完成后再用刚才的方法进行测试即可\",\"从公网唤醒这块先挖个坑吧，什么时候我把水星这个ddns配置摸透了再说\",\"做到这里，如果你没有任何问题，那么恭喜你，已经完成了配置了！\"]},\"22\":{\"h\":\"踩过的坑\"},\"23\":{\"h\":\"没有电源管理\",\"t\":[\"这个大概率是网卡驱动的问题，如果你的网卡驱动是从笔记本供应商的官网下载的并且还不支持，那么你就要考虑从网卡生产公司的官网上下载了\",\"比如，机械革命的驱动，官网上下载下来的最新驱动没有电源管理，但是官网上也没有其他的网卡驱动了\",\"我就去Realtek官网看了一下，发现官网给出的居然有两个版本，一个是不带电源管理的，这问题的根本原因找到了\",\"下载图中第二个驱动后问题解决！\"]},\"24\":{\"h\":\"能收到封包，但是无法正常开机\",\"t\":[\"我遇到的这种情况，很离谱\",\"最早的时候我不知道为什么把休眠给关了，就是这个操作，让我多花了两个小时去找为什么我的电脑还不能唤醒\",\"这个问题也很好解决，以管理员身份打开powershell，输入powercfg /h on回车就好，不输出任何东西，代表成功开启休眠，然后这下就好了\",\"当然，我再翻攻略的时候也说了要把电源选项中的用于快速启动给关闭，如果你不能正常启动，也可以看看这一项是否关闭\"]},\"25\":{\"c\":[\"瞎折腾\"]},\"26\":{\"c\":[\"远程开发\",\"平板玩法\"]},\"27\":{\"h\":\"Markdown表情 —— 事物\"},\"28\":{\"c\":[\"学习\",\"Markdown\",\"CheatSheet\"]},\"29\":{\"c\":[\"Markdown\",\"CheatSheet\"]},\"30\":{\"h\":\"Markdown表情 —— 人物\"},\"31\":{\"c\":[\"学习\",\"Markdown\",\"CheatSheet\"]},\"32\":{\"c\":[\"Markdown\",\"CheatSheet\"]},\"33\":{\"h\":\"Markdown表情 —— 地点\"},\"34\":{\"c\":[\"学习\",\"Markdown\",\"CheatSheet\"]},\"35\":{\"c\":[\"Markdown\",\"CheatSheet\"]},\"36\":{\"h\":\"Markdown表情 —— 符号\"},\"37\":{\"c\":[\"学习\",\"Markdown\",\"CheatSheet\"]},\"38\":{\"c\":[\"Markdown\",\"CheatSheet\"]},\"39\":{\"h\":\"Markdown表情 —— 自然\"},\"40\":{\"c\":[\"学习\",\"Markdown\",\"CheatSheet\"]},\"41\":{\"c\":[\"Markdown\",\"CheatSheet\"]},\"42\":{\"h\":\"Axios封装与API的统一管理\",\"t\":[\"在写了一些屎山之后发现统一的api管理真的很重要\",\"通常在开发过程中，尤其是在现在当下的前后端分离项目中，我们总要发起不少的请求，同一个接口可能还会在不同地方反复请求。如果你一个人承包了前后端的话，这样子可能看上去没什么问题\",\"但是\",\"当有一天，后端的哥们屁颠屁颠的跑过来告诉你：“嘿哥们，我们重构了项目，有些接口你可能要变一下”，这时候就体现出来封装axios和统一管理api的重要性了\"]},\"43\":{\"h\":\"封装axios\",\"t\":[\"首先说一下我们的目录结构\",\"|- src |- api |- request.js |- index.js |- api封装文件... |- assets |- component |- ... \",\"需要要用你喜欢的包管理工具安装axios\"]},\"44\":{\"h\":\"初步封装\",\"t\":[\"import axios from 'axios' const request = axios.create({ baseURL: 'http://localhost:8080', timeout: 5000, headers: { // 'token': localStorage.getItem('token') || '' // 如果要加token验证的话可以带上 }, }); \",\"然后我们再配置一下请求拦截器和响应拦截器\"]},\"45\":{\"h\":\"请求拦截器\",\"t\":[\"request.interceptors.request.use( config => { // 发起请求时，重新获取最新的token，这一步有时很重要，因为创建 axios 实例的时候，获取到的 token 未必是有效的，或说未必能获取到 const token = localStorage.getItem('token') config.headers['token'] = token || '' return config }, error => { console.warn(error) return Promise.reject(error) } ) \"]},\"46\":{\"h\":\"响应拦截器\",\"t\":[\"request.interceptors.response.use( (response) => { let responseCode = response.data.code; if (responseCode && responseCode != \\\"200\\\") { // 处理状态码不为200时操作 return response } // 或者可以用switch来匹配状态码进行处理 return response }, (error) => { if (error.code === 'ECONNABORTED' || error.message === \\\"Network Error\\\" || error.message.includes(\\\"timeout\\\")) { // 处理网络错误操作 } return Promise.resolve(error.response) } ) \",\"至此我们完成了axios的初步封装，接下来我们封装五个常用方法\"]},\"47\":{\"h\":\"POST方法\",\"t\":[\"function post(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'post', data: params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } \"]},\"48\":{\"h\":\"GET方法\",\"t\":[\"function get(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'get', params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } \"]},\"49\":{\"h\":\"DEL方法\",\"t\":[\"function del(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'delete', params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } \"]},\"50\":{\"h\":\"PUT方法\",\"t\":[\"function put(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'put', data: params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } \"]},\"51\":{\"h\":\"POST上传文件\",\"t\":[\"function postMultipart(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'post', data: params, headers: { Accept: 'application/json', 'Content-Type': 'multipart/form-data; boundary=' + new Date().getTime() } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } \",\"到此为止我们已经封装好了axios，给出一份完整代码吧\",\"// request.js const request = axios.create({ baseURL: 'http://localhost:8080', timeout: 5000, headers: { // 'token': localStorage.getItem('token') || '' // 如果要加token验证的话可以带上 }, }) request.interceptors.request.use( config => { // 发起请求时，重新获取最新的token，这一步有时很重要，因为创建 axios 实例的时候，获取到的 token 未必是有效的，或说未必能获取到 const token = localStorage.getItem('token') config.headers['token'] = token || '' return config }, error => { console.warn(error) return Promise.reject(error) } ) request.interceptors.response.use( (response) => { let responseCode = response.data.code; if (responseCode && responseCode != \\\"200\\\") { // 处理状态码不为200时操作 return response } // 或者可以用switch来匹配状态码进行处理 return response }, (error) => { if (error.code === 'ECONNABORTED' || error.message === \\\"Network Error\\\" || error.message.includes(\\\"timeout\\\")) { // 处理网络错误操作 } return Promise.resolve(error.response) } ) function post(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'post', data: params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } function get(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'get', params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } function del(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'delete', params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } function put(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'put', data: params, headers: { Accept: 'application/json', 'Content-Type': 'application/json; charset=UTF-8' } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } function postMultipart(url, params = {}) { return new Promise((resolve, reject) => { http({ url, method: 'post', data: params, headers: { Accept: 'application/json', 'Content-Type': 'multipart/form-data; boundary=' + new Date().getTime() } }).then(res => { resolve(res) }).catch(err => { reject(err) }) }) } export { request, post, get, del, put, postMultipart } \"]},\"52\":{\"h\":\"管理api\",\"t\":[\"接下来我们就要开始对api进行管理\"]},\"53\":{\"h\":\"api分组\",\"t\":[\"比如我们目前有要对用户进行操作的api，我们就可以在api目录下新建一个userApi.js，如下\",\"// userApi.js import { http, get, post, del, put } from './request'; let userApi = { login: (params) => post('/auth/login', params), register: (params) => post('/auth/register', params), logout: () => get('/auth/logout'), getUserInfo: () => get('/auth/info'), updateUserInfo: (params) => put('/auth/info', params), }; export default userApi; \",\"再比如还有针对预约的增删改查的api\",\"// appointmentApi.js import { http, get, post, del, put } from './request'; let appointmentApi = { getAppointmentList: (params) => get('/appointment/list', params), getAppointment: (params) => get('/appointment', params), getTodoAppointmentSum: (params) => get('/appointment/todo', params), getTodoAppointmentSum: (params) => get('/appointment/todo/sum', params), createAppointment: (params) => post('/appointment', params), updateAppointment: (params) => put('/appointment', params), deleteAppointment: (params) => del('/appointment', params), }; export default appointmentApi; \"]},\"54\":{\"h\":\"api整合\",\"t\":[\"然后我们在index.js中集中管理所有api即可\",\"// index.js import userApi from \\\"./userApi\\\"; import appointmentApi from \\\"./appointmentApi\\\"; const api = { auth: userApi, appointment: appointmentApi }; export default api; \",\"至此，axios封装与api管理完成\"]},\"55\":{\"h\":\"使用\",\"t\":[\"在使用时，直接引入api即可使用，如\",\"import api from '@/api' let params = { username: 'username', // 密码要加密传输，加密方式随意，这里更推荐非对称加密 password: encrypt('password') } api.auth.login(params).then(res => { // 处理登录成功业务 }).catch(error => { // 理论上来说无法到达这一步 // 因为错误已经在响应拦截器中被处理了 // 当然不排除特殊情况，至于特殊情况是什么，我具体不是很清楚 }).finally(() => { // 处理请求完成业务 }) \",\"本文参考：经验|axios封装与api管理：简洁实用\"]},\"56\":{\"c\":[\"开发\",\"前端\"]},\"57\":{\"c\":[\"Vue.js\",\"前端\",\"Javascript\",\"Axios\"]},\"58\":{\"h\":\"Vuepress自动生成侧边栏目录\",\"t\":[\"太懒不想手动写侧边栏结构？花亿点时间就好！\",\"基本思路很简单，就是把所有md文件拿过来，分析目录结构就好\",\"说明一下，我的所有文章都在src目录下的posts目录中，自动生成的逻辑是文件夹为一个分类，文件名为侧边栏展示名称\",\"这里我选择用一棵树来存放目录结构，于是我自己实现了一颗专用于维护目录的树\",\"// tree.js class Node { constructor(_data, _root = false) { this.data = _data; this.children = []; this.isLeaf = false; this.isRoot = _root; } appendChild(node) { if (!(node instanceof Node)) { throw new Error('node must be a Node instance'); } this.children.push(node); } setData(data) { if (data instanceof Node) { throw new Error('data can\\\\'t be a Node instance'); } this.data = data; } } class Tree { constructor(_root) { this.root = _root; } // 用于查找对应元素是否在树中，插入时使用 find(target) { if (this.root === null) { return null; } let queue = [this.root]; while (queue.length) { let node = queue.shift(); if (node.data === target) { return node; } for (let i = 0; i < node.children.length; i++) { queue.push(node.children[i]); } } return null; } // 用于将一个文件路径插入树中 // 如 ‘posts/开发/前端开发/test.md’ // 利用次函数可以将test.md插入到posts节点下的开发节点下的前端开发的子节点中 insert(array) { if (array.length === 0) { return; } let parent = this.root; array.forEach((item, index) => { let node = this.find(item); if (node === null) { node = new Node(item); parent.appendChild(node); } parent = node; if (index === array.length - 1) { parent = this.root; node.isLeaf = true; } }); } } export { Tree, Node }; \",\"当然，方法不止这一种，只是我觉得用树会比较直观\",\"然后就是把posts目录下的所有md文件读出来就好了\",\"import fs from 'fs'; import path from 'path'; function readDir(dir, pattern) { let fileList = []; fs.readdirSync(path.resolve(dir)).forEach(file => { let filePath = `${dir}/${file}`; if (pattern.test(file)) { fileList.push(filePath); } if (fs.statSync(filePath).isDirectory()) { fileList.push(...readDir(filePath, pattern)); } }) return fileList; } \",\"这个函数也很好理解，就是把当前目录下内容拿过来看，是文件就放到list集合中，不是就递归下去\",\"有了这个列表，我们只需要调用之前封装好的Tree类下的insert函数即可\",\"插入完成后我们还需要遍历，遍历就十分简单，直接递归调用就好了\",\"function traverse(root) { if (root.isRoot) { return {text: \\\"文章列表\\\",prefix: \\\"posts/\\\",icon: 'book',collapsible: false,children: [...root.children.map(child => traverse(child))]} } else if (root.isLeaf) { return { text: root.data.replace('.md', ''), link: root.data.replace('.md', '') } } else { return { text: root.data,prefix: root.data, collapsible: true,children: [...root.children.map(child => traverse(child))]} } } \",\"主体函数如下\",\"function getSideBar(opt = {}) { let options = { basePath: 'src', postsPath: 'posts', pattern: /\\\\.md$/, rootCollapsable: false, nodeCollapsable: true, rootName: '文章列表', rootIcon: 'book', ...opt }; let files = readDir(`${options.basePath}/${options.postsPath}`, options.pattern); const tree = new Tree(new Node(options.postsPath, true)); files.forEach(file => { tree.insert(file.replace(`${options.basePath}/${options.postsPath}/`, '').split('/')); }) return traverse(tree.root); } \",\"这个是可以传一些配置文件的，你可以根据实际情况修改\",\"结果示例：\",\"{ text: \\\"文章列表\\\", prefix: \\\"posts/\\\", icon: 'book', collapsible: false, children: [ { text: \\\"瞎折腾\\\", prefix: \\\"瞎折腾/\\\", collapsible: true, children: [ { text: \\\"平板+Windows实现远程唤醒+远程桌面\\\", link: \\\"平板+Windows实现远程唤醒+远程桌面\\\", }, { text: '使用256G洋垃圾打造3合1移动硬盘', link: '使用256G洋垃圾打造3合1移动硬盘', }, { text: 'Windows无线网络突然消失', link: 'Windows无线网络突然消失' } ], }, { text: '开发', prefix: \\\"开发/\\\", collapsible: true, children: [ { text: '前端', prefix: \\\"前端开发/\\\", collapsible: true, children: [ { text: 'Axios封装', link: 'Axios封装', }, { text: 'Vuepress自动生成侧边栏目录', link: 'Vuepress自动生成侧边栏目录', } ], }, ], }, { text: \\\"算法\\\", prefix: \\\"算法\\\", collapsible: true, children: [ { text: \\\"树\\\", prefix: \\\"树\\\", collapsible: true, children: [ { text: \\\"树的深度相关问题\\\", link: \\\"树的深度相关问题\\\", } ] } ] } ] }, \",\"大概就是这么个样式，再完善完善就把他整成个npm包☺️\"]},\"59\":{\"c\":[\"开发\",\"前端\",\"博客建站\"]},\"60\":{\"c\":[\"Vue.js\",\"前端\",\"Javascript\",\"Vuepress\"]},\"61\":{\"h\":\"Vuepress表格点击复制组件\",\"t\":[\"在收集Markdown表情时突发奇想想搞个点击复制的组件，刚好可以用来熟悉vuepress\",\"首先是Vuepress插件的使用，这个很简单，在.vuepress目录下创建components文件夹（当然，位置无所谓，方便管理罢了），然后在client.ts文件中导入即可，例如我的TableClick2Copy.vue组件，在client.ts中做如下声明即可：\",\"import { defineClientConfig } from \\\"@vuepress/client\\\"; import TableClick2Copy from \\\"./components/TableClick2Copy.vue\\\"; export default defineClientConfig({ enhance: ({ app, router, siteData }) => { app.component(\\\"TableClick2Copy\\\", TableClick2Copy); }, }); \",\"然后在对应文章中直接使用就好，这点Vuepress官方文档都有写\",\"这个功能实现很简单，就是监听表格点击事件，然后将表格内容放到剪切板即可\",\"基本代码如下：\",\"import { ref, onMounted } from 'vue'; // 控制popup的显示和显示内容 const visible = ref(false); const content = ref(''); onMounted(() => { const tables = document.querySelectorAll('table'); if (!tables) return; tables.forEach((table) => { table.addEventListener('click', (e) => { const target = e.target as HTMLElement; // 点击的对象如果是对应的表格 if (target.nodeName === 'TD' || target.nodeName === 'CODE') { const text = target.innerText; // 内容写进剪贴板 navigator.clipboard.writeText(text); content.value = text; if (visible.value) return; visible.value = true; setTimeout(() => { content.value = ''; visible.value = false; }, 1000); } }); table.addEventListener('mouseover', (e) => { const target = e.target as HTMLElement; if (target.nodeName === 'TD' || target.nodeName === 'CODE') { target.style.cursor = 'pointer'; } }); }) }) \",\"这里的popup随便实现一下就好\",\"给个例子\",\"<template> <Teleport to=\\\"#app\\\"> <Transition name=\\\"popup\\\"> <div class=\\\"popup\\\" v-if=\\\"visible\\\"> {{ content }} - 已复制 </div> </Transition> </Teleport> </template> <style lang=\\\"scss\\\" scoped> .popup { display: flex; justify-content: center; align-items: center; position: fixed; top: 10%; left: 50%; transform: translateX(-50%); z-index: 999; width: fit-content; height: 40px; padding: 0 1%; border-radius: 5%; font-size: 12px; color: #fff; background-color: rgba(0, 0, 0, .5); user-select: none; } .popup-enter-active, .popup-leave-active { transition: all .3s; } .popup-enter-from , .popup-leave-to { opacity: 0; transform: translate(-50%, -100%) } </style> \",\"目前我也想不到有什么更好的想法，如果有就麻烦佬们给个点子😚\"]},\"62\":{\"c\":[\"开发\",\"前端\",\"博客建站\"]},\"63\":{\"c\":[\"Vue.js\",\"前端\",\"Javascript\",\"Vuepress\"]},\"64\":{\"h\":\"Git部署私服\",\"t\":[\"部署git私服纯属是属觉得好玩又能配合自动打包部署，一举两得，何乐不为\",\"最早我的博客是在在用Github Pages，配合上Actions，基本每次都很方便，只管写完push一下就好了，然后他就可以自己打包然后部署\",\"但是，有个问题，不挂梯子访问太慢了（这个问题有好多方法，比如cdn，我就是单纯想这么搞而已），于是我就把博客放到服务器上了\"]},\"65\":{\"h\":\"安装git\",\"t\":[\"安装很简单，具体怎么安装可以看自己的服务器用的什么包管理工具\",\"sudo apt install git \"]},\"66\":{\"h\":\"配置用户\",\"t\":[\"创建git用户组和git用户\",\"这个用户组和用户名都是随意的，你可以随便起\",\"# 新增 git 用户组 groupadd git # 新增 git 用户并归属于 git 用户组 useradd git -g git \"]},\"67\":{\"h\":\"收集git公钥\",\"t\":[\"这个也很好理解，在我们使用Github时，需要将我们生成的公钥放到网站中去，以便身份确认\",\"同样，我们也需要这个来访问我们的git服务器\",\"去到将我们自己电脑中的公钥复制一下，一般在~/.ssh/id_rsa.pub（Windows下~为用户目录），然后找到我们刚刚创建的用户git的目录下，将公钥复制进authorized_keys文件中\",\"# 进入用户git的目录下，如果你创建的用户不叫git那就去到相应的目录下 cd /home/git # 如果没有.ssh文件夹就创建 mkdir .ssh # 编辑authorized_keys文件 # 如果没有vim就安装一下，或者使用你熟悉的编辑器打开就好 # 复制公钥到文件中，如果有多个，就一行一个 vim .ssh/authorized_keys # 赋予文件权限 chmod 744 .ssh/authorized_keys \"]},\"68\":{\"h\":\"初始化Git仓库\",\"t\":[\"首先我们要找到放仓库的地方，自己定，这里我们以放在/repos目录下为例，假定我已经创建了目录\",\"我们创建我们的仓库，比如仓库叫sample，那我们的目录名就该为sample.git\",\"创建出来的仓库为裸仓库，没有工作区，且服务器上的仓库均为.git结尾\",\"然后将这个目录易个主，将所有者改为git\",\"# 进入/repo目录 cd /repo # 创建裸仓库 sudo git init --bare sample.git # 改变所有权 sudo chown -R git:git sample.git \"]},\"69\":{\"h\":\"禁用远程登录\",\"t\":[\"出于安全考虑，我们不应该让git用户登录shell\",\"我们要编辑/etc/passwd文件\",\"# 编辑passwd文件，和上边一样，用自己喜欢的就好 vim /etc/passwd \",\"将git:x:1001:1001:,,,:/home/git:/bin/bash改为git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell\",\"要说的是这里的/home/git应该为你实际创建的用户的用户目录，如果按照本文配置用户部分走的话，即用户名没有改，这里应该是/home/git\",\"这样git用户可以正常通过ssh使用git，却无法登录shell，因为git-shell登录一次就退出了\"]},\"70\":{\"h\":\"克隆仓库\",\"t\":[\"到此为止，你就可以在自己电脑上克隆这个仓库了\",\"# git clone git@你的服务器ip:git仓库地址，如 git clone git@11.45.45.14:/repo/sample.git \",\"然后就可以愉快的将博客仓库放到服务器上了\",\"当然，你还可以在服务器上搭一个gitlab，可视化更方便，可以参考这篇教程\"]},\"71\":{\"c\":[\"瞎折腾\",\"博客建站\"]},\"72\":{\"c\":[\"Git\"]},\"73\":{\"h\":\"利用Git Hooks自动打包部署\",\"t\":[\"什么？2050年了你还在手动上传服务器然后手动打包部署？\",\"接上文，博客的仓库是搬到服务器上了，如何当一个撒手掌柜呢，让我每次写完只管push，剩下的打包自动部署自动进行呢？\",\"这里就要用到我们的Git Hooks\"]},\"74\":{\"h\":\"Git Hooks\",\"t\":[\"首先我们先了解一下Git Hooks，看官网的解释就好了，简单点说，就是在git的工作流程中分为几个关键的时间节点，也就是钩子，在到达时间节点时，git会执行对应的自定义脚本\",\"有了这玩意，就已经成功一半了，我们不就是想让我们在push之后服务器去自动运行打包命令吗，那问题就很简单了，只需要让服务器在收到推送后进行打包即可\"]},\"75\":{\"h\":\"脚本编写\",\"t\":[\"Git Hooks的自定义脚本位置就在仓库的hooks目录中，服务器客户端都有\",\"我们在找到服务器的hooks目录，将post-update.sample拷贝一份，重命名为post-update，这样服务器就会在仓库内容更新后运行该脚本\",\"# 进入服务器的git仓库的hooks目录，这个路径只是例子，根据实际情况改变 cd path/to/git/repo/hooks # 复制post-update.sample并重命名 cp post-update.sample post-update # 编辑post-update vim post-update \",\"具体内容很好写，我们随便找一个目录，将仓库内容clone下来，然后运行打包命令即可\",\"# 指定了脚本要使用的解释器 #!/bin/bash # 让脚本在任何命令返回非零（出现错误）时立即退出 set -e # 取消对环境变量 GIT_DIR 的设置。 # 这样做可以确保在脚本中使用的 Git 命令是基于当前工作目录的。 unset GIT_DIR # 定义WORK_PATH变量，指定工作目录，即你要克隆仓库进行打包的位置 WORK_PATH='path/to/workspace' cd $WORK_PATH echo \\\"cleaning workspace\\\" # 使用 Git 命令重置工作区，将其与远程仓库的分支保持一致。 # --hard 参数表示放弃本地的修改，直接使用远程仓库的内容。 git reset --hard origin/your-branch # 清理工作区中未被 Git 管理的文件 git clean -f echo \\\"pulling code\\\" # 拉取远程仓库代码 git pull origin your-branch echo \\\"building...\\\" # 运行打包命令，这里用的vuepress打包命令为npm run docs:build，根据自己的更改 npm run docs:build echo \\\"deploy done\\\" \",\"按理说，这个应该是正常运行的\",\"但是，我这边总是在push以后会卡住没有反应，卡在building的步骤，我以为是我本地的问题，找了一圈发现，服务器一运行打包命令就死机\",\"好家伙，没辙了，这个方法看来是走不通了，只能想别的办法了\"]},\"76\":{\"h\":\"Husky\",\"t\":[\"想了很多方法，也看了很多文章，首先在客户端用git hooks在提交前打包是百分百可行的，但是我发现了更简单的方法，使用Husky\",\"什么是Husky\",\"官网是这么解释的\",\"Modern native git hooks made easy\",\"Husky improves your commits and more 🐶 woof!\",\"通俗点说\",\"他可以让我们很轻松地使用Git Hooks，在提交代码时运行我们想要的脚本。\",\"我看了好多例子都是用来做代码质量检测的，像我这种一个人写的屎山就不需要了（bushi\",\"它的工作原理是在我们的 package.json 文件中加入一个对象，配置 Husky 来运行我们指定的脚本。之后，Husky会管理我们的脚本将在Git生命周期的哪个阶段运行。\",\"我们首先安装Husky\",\"npm install husky \",\"新版本的Husky中我们不用在package.json配置，而是在.husky目录下配置\",\"我们首先需要在package.json中的scripts中添加prepare脚本\",\"{ \\\"scripts\\\": { \\\"prepare\\\": \\\"husky install\\\" } } \",\"prepare脚本会在npm install之后自动执行。也就是说当我们执行npm install安装完项目依赖后会执行husky install命令，该命令会创建.husky目录并指定该目录为git hooks所在的目录。\",\"然后添加git hooks\",\"# npx husky add .husky/pre-commit \\\\ # \\\"echo [Husky] project building \\\\ # && 打包命令 \\\\ # && 将打包后的文件夹添加的暂存区“ # 如 npx husky add .husky/pre-commit \\\"echo [Husky] project building \\\\ && npm run docs:build \\\\ && git add src/.vuepress/dist -f\\\" \",\"然后你就能看到.husky目录下多了一个pre-commit的脚本\",\"内容如下\",\"#!/usr/bin/env sh . \\\"$(dirname -- \\\"$0\\\")/_/husky.sh\\\" echo [Husky] project building && npm run docs:build && git add src/.vuepress/dist -f \",\"在每次git commit之前都会运行这个脚本，然后将打包完成的代码一块提交给服务器，虽然每次commit都要等一下，但总比服务器死机强多了\",\"这时候我们就要改一下服务器那边的post-update脚本了\",\"我们只需要在收到更新后直接将仓库克隆下来就好\",\"#!/bin/bash set -e unset GIT_DIR WORK_PATH='path/to/workspace' cd $WORK_PATH echo \\\"cleaning workspace\\\" git reset --hard origin/your-branch git clean -f echo \\\"pulling code\\\" git pull origin your-branch # 跟上边差别不大，只是不用打包了而已，根据nginx的配置，你可以在这里进行一下拷贝操作 # 例如： # cp ./src/.vuepress/dist /www/blog # echo \\\"building...\\\" # npm run docs:build echo \\\"deploy done\\\" \"]},\"77\":{\"h\":\"Nginx配置\",\"t\":[\"顺带一下一份nginx的配置，懒得写注释了，应该都挺好理解的，不懂的搜一下就好了\",\"server { listen 443 ssl; server_name your.domain; ssl_certificate path/to/your/cert; ssl_certificate_key path/to/your/cert/key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on; location / { root path/to/your/dist/folder; index index.html; } } server { listen 80; server_name your.domain; rewrite ^(.*)$ https://$host$1 permanent; } \"]},\"78\":{\"c\":[\"瞎折腾\",\"博客建站\"]},\"79\":{\"c\":[\"Git\",\"Git Hooks\"]},\"80\":{\"h\":\"树的深度相关问题\",\"t\":[\"无意刷到这几道题，既然都看到了，哪有不做的道理\",\"首先说明，本文采用的例子均为\",\" 1 / \\\\ 2 3 / \\\\ / \\\\ 4 5 6 7 / \\\\ 8 9 \",\"结点定义为\",\"struct Node { int value; Node* left = nullptr; Node* right = nullptr; }; \"]},\"81\":{\"h\":\"树的深度\",\"t\":[\"这个问题很简单了吧，基本的数据结构\",\"最简单的就是递归，将左枝和右枝的深度取最大加一就好\",\"int get_tree_depth(Node* root) { if (!root) { return 0; } int left_depth = get_tree_depth(root->left); int right_depth = get_tree_depth(root->right); return max(left_depth, right_depth) + 1; } \"]},\"82\":{\"h\":\"所有子树的深度之和\",\"t\":[\"TODO\"]},\"83\":{\"h\":\"所有结点及其子树的深度之和\",\"t\":[\"TODO\"]},\"84\":{\"h\":\"树上任意一个点到其他所有结点的距离之和\",\"t\":[\"TODO\"]},\"85\":{\"c\":[\"算法\"]},\"86\":{\"c\":[\"树\",\"算法\",\"数据结构\"]},\"87\":{\"h\":\"瞎折腾\"},\"88\":{\"h\":\"Posts\"},\"89\":{\"h\":\"Markdown\"},\"90\":{\"h\":\"学习\"},\"91\":{\"h\":\"前端开发\"},\"92\":{\"h\":\"开发\"},\"93\":{\"h\":\"运维\"},\"94\":{\"h\":\"树\"},\"95\":{\"h\":\"算法\"}},\"dirtCount\":0,\"index\":[[\"运维\",{\"0\":{\"93\":1}}],[\"运行打包命令\",{\"1\":{\"75\":1}}],[\"数据结构\",{\"2\":{\"86\":1}}],[\"结点定义为\",{\"1\":{\"80\":1}}],[\"结果示例\",{\"1\":{\"58\":1}}],[\"9\",{\"1\":{\"80\":1}}],[\"999\",{\"1\":{\"61\":1}}],[\"6\",{\"1\":{\"80\":1}}],[\"64\",{\"1\":{\"16\":2}}],[\"本文采用的例子均为\",{\"1\":{\"80\":1}}],[\"本文参考\",{\"1\":{\"55\":1}}],[\"哪有不做的道理\",{\"1\":{\"80\":1}}],[\"既然都看到了\",{\"1\":{\"80\":1}}],[\"无意刷到这几道题\",{\"1\":{\"80\":1}}],[\"^\",{\"1\":{\"77\":1}}],[\"懒得写注释了\",{\"1\":{\"77\":1}}],[\"顺带一下一份nginx的配置\",{\"1\":{\"77\":1}}],[\"跟上边差别不大\",{\"1\":{\"76\":1}}],[\"虽然每次commit都要等一下\",{\"1\":{\"76\":1}}],[\"打包命令\",{\"1\":{\"76\":1}}],[\"打开之后点击右下的加号\",{\"1\":{\"21\":1}}],[\"打开设备管理器\",{\"1\":{\"21\":1}}],[\"打开ventoy2disk\",{\"1\":{\"15\":1}}],[\"打开virtualbox\",{\"1\":{\"14\":1}}],[\"该命令会创建\",{\"1\":{\"76\":1}}],[\"而是在\",{\"1\":{\"76\":1}}],[\"来运行我们指定的脚本\",{\"1\":{\"76\":1}}],[\"它的工作原理是在我们的\",{\"1\":{\"76\":1}}],[\"像我这种一个人写的屎山就不需要了\",{\"1\":{\"76\":1}}],[\"通俗点说\",{\"1\":{\"76\":1}}],[\"通常在开发过程中\",{\"1\":{\"42\":1}}],[\"🐶\",{\"1\":{\"76\":1}}],[\"官网是这么解释的\",{\"1\":{\"76\":1}}],[\"官网上下载下来的最新驱动没有电源管理\",{\"1\":{\"23\":1}}],[\"想了很多方法\",{\"1\":{\"76\":1}}],[\"没辙了\",{\"1\":{\"75\":1}}],[\"没有工作区\",{\"1\":{\"68\":1}}],[\"没有电源管理\",{\"0\":{\"23\":1}}],[\"没有电源管理怎么办\",{\"1\":{\"21\":1}}],[\"没有网线的就不要再折腾了\",{\"1\":{\"21\":1}}],[\"没有彻底卸载\",{\"1\":{\"8\":1}}],[\"卡在building的步骤\",{\"1\":{\"75\":1}}],[\"按理说\",{\"1\":{\"75\":1}}],[\"按钮下的的其他商店里找一找\",{\"1\":{\"20\":1}}],[\"根据nginx的配置\",{\"1\":{\"76\":1}}],[\"根据自己的更改\",{\"1\":{\"75\":1}}],[\"根据实际情况改变\",{\"1\":{\"75\":1}}],[\"拉取远程仓库代码\",{\"1\":{\"75\":1}}],[\"管理的文件\",{\"1\":{\"75\":1}}],[\"管理api\",{\"0\":{\"52\":1}}],[\"清理工作区中未被\",{\"1\":{\"75\":1}}],[\"your\",{\"1\":{\"75\":2,\"76\":3,\"77\":5}}],[\"参数表示放弃本地的修改\",{\"1\":{\"75\":1}}],[\"命令重置工作区\",{\"1\":{\"75\":1}}],[\"命令是基于当前工作目录的\",{\"1\":{\"75\":1}}],[\"指定工作目录\",{\"1\":{\"75\":1}}],[\"指定了脚本要使用的解释器\",{\"1\":{\"75\":1}}],[\"定义work\",{\"1\":{\"75\":1}}],[\"的设置\",{\"1\":{\"75\":1}}],[\"取消对环境变量\",{\"1\":{\"75\":1}}],[\"时立即退出\",{\"1\":{\"75\":1}}],[\"出现错误\",{\"1\":{\"75\":1}}],[\"出于安全考虑\",{\"1\":{\"69\":1}}],[\"让脚本在任何命令返回非零\",{\"1\":{\"75\":1}}],[\"让我每次写完只管push\",{\"1\":{\"73\":1}}],[\"让我多花了两个小时去找为什么我的电脑还不能唤醒\",{\"1\":{\"24\":1}}],[\"复制post\",{\"1\":{\"75\":1}}],[\"复制公钥到文件中\",{\"1\":{\"67\":1}}],[\"脚本编写\",{\"0\":{\"75\":1}}],[\"简单点说\",{\"1\":{\"74\":1}}],[\"简洁实用\",{\"1\":{\"55\":1}}],[\"接上文\",{\"1\":{\"73\":1}}],[\"接下来我们就要开始对api进行管理\",{\"1\":{\"52\":1}}],[\"接下来我们封装五个常用方法\",{\"1\":{\"46\":1}}],[\"接下来去移动设备上安装一个远程唤醒软件\",{\"1\":{\"21\":1}}],[\"什么是husky\",{\"1\":{\"76\":1}}],[\"什么\",{\"1\":{\"73\":1}}],[\"什么时候我把水星这个ddns配置摸透了再说\",{\"1\":{\"21\":1}}],[\"利用git\",{\"0\":{\"73\":1}}],[\"利用次函数可以将test\",{\"1\":{\"58\":1}}],[\"到此为止\",{\"1\":{\"70\":1}}],[\"到此为止我们已经封装好了axios\",{\"1\":{\"51\":1}}],[\"克隆仓库\",{\"0\":{\"70\":1}}],[\"却无法登录shell\",{\"1\":{\"69\":1}}],[\"和上边一样\",{\"1\":{\"69\":1}}],[\"编辑post\",{\"1\":{\"75\":1}}],[\"编辑passwd文件\",{\"1\":{\"69\":1}}],[\"编辑authorized\",{\"1\":{\"67\":1}}],[\"禁用远程登录\",{\"0\":{\"69\":1}}],[\"改变所有权\",{\"1\":{\"68\":1}}],[\"且服务器上的仓库均为\",{\"1\":{\"68\":1}}],[\"且很容易没有电\",{\"1\":{\"19\":1}}],[\"创建裸仓库\",{\"1\":{\"68\":1}}],[\"创建出来的仓库为裸仓库\",{\"1\":{\"68\":1}}],[\"创建git用户组和git用户\",{\"1\":{\"66\":1}}],[\"假定我已经创建了目录\",{\"1\":{\"68\":1}}],[\"初始化git仓库\",{\"0\":{\"68\":1}}],[\"初步封装\",{\"0\":{\"44\":1}}],[\"7\",{\"1\":{\"80\":1}}],[\"744\",{\"1\":{\"67\":1}}],[\"79ac\",{\"1\":{\"8\":1}}],[\"赋予文件权限\",{\"1\":{\"67\":1}}],[\"需要将我们生成的公钥放到网站中去\",{\"1\":{\"67\":1}}],[\"需要要用你喜欢的包管理工具安装axios\",{\"1\":{\"43\":1}}],[\"收集git公钥\",{\"0\":{\"67\":1}}],[\"新版本的husky中我们不用在package\",{\"1\":{\"76\":1}}],[\"新增\",{\"1\":{\"66\":2}}],[\"新建虚拟机\",{\"1\":{\"14\":1}}],[\"于是我就把博客放到服务器上了\",{\"1\":{\"64\":1}}],[\"于是我自己实现了一颗专用于维护目录的树\",{\"1\":{\"58\":1}}],[\"只是不用打包了而已\",{\"1\":{\"76\":1}}],[\"只是我觉得用树会比较直观\",{\"1\":{\"58\":1}}],[\"只能想别的办法了\",{\"1\":{\"75\":1}}],[\"只需要让服务器在收到推送后进行打包即可\",{\"1\":{\"74\":1}}],[\"只管写完push一下就好了\",{\"1\":{\"64\":1}}],[\"配合上actions\",{\"1\":{\"64\":1}}],[\"配置\",{\"1\":{\"76\":1}}],[\"配置用户\",{\"0\":{\"66\":1}}],[\"配置一下路由器的ddns我还可以从外网访问\",{\"1\":{\"20\":1}}],[\"配置项里的东西在ventoy官网都有很详细的解释\",{\"1\":{\"16\":1}}],[\"何乐不为\",{\"1\":{\"64\":1}}],[\"部署git私服纯属是属觉得好玩又能配合自动打包部署\",{\"1\":{\"64\":1}}],[\"目前我也想不到有什么更好的想法\",{\"1\":{\"61\":1}}],[\"已复制\",{\"1\":{\"61\":1}}],[\"已经完成了配置了\",{\"1\":{\"21\":1}}],[\"给个例子\",{\"1\":{\"61\":1}}],[\"给出一份完整代码吧\",{\"1\":{\"51\":1}}],[\"内容如下\",{\"1\":{\"76\":1}}],[\"内容写进剪贴板\",{\"1\":{\"61\":1}}],[\"内部端口为9\",{\"1\":{\"21\":1}}],[\"内部端口为3389\",{\"1\":{\"20\":1}}],[\"queryselectorall\",{\"1\":{\"61\":1}}],[\"queue\",{\"1\":{\"58\":4}}],[\"控制popup的显示和显示内容\",{\"1\":{\"61\":1}}],[\"基本的数据结构\",{\"1\":{\"81\":1}}],[\"基本每次都很方便\",{\"1\":{\"64\":1}}],[\"基本代码如下\",{\"1\":{\"61\":1}}],[\"基本思路很简单\",{\"1\":{\"58\":1}}],[\"例如\",{\"1\":{\"76\":1}}],[\"例如我的tableclick2copy\",{\"1\":{\"61\":1}}],[\"例如10\",{\"1\":{\"20\":1}}],[\"方便管理罢了\",{\"1\":{\"61\":1}}],[\"方法不止这一种\",{\"1\":{\"58\":1}}],[\"方法很多\",{\"1\":{\"14\":1}}],[\"位置无所谓\",{\"1\":{\"61\":1}}],[\"刚好可以用来熟悉vuepress\",{\"1\":{\"61\":1}}],[\"博客的仓库是搬到服务器上了\",{\"1\":{\"73\":1}}],[\"博客建站\",{\"2\":{\"59\":1,\"62\":1,\"71\":1,\"78\":1}}],[\"博客主页\",{\"0\":{\"0\":1}}],[\"大概就是这么个样式\",{\"1\":{\"58\":1}}],[\"大致意思是通过网络或者pci\",{\"1\":{\"21\":1}}],[\"树上任意一个点到其他所有结点的距离之和\",{\"0\":{\"84\":1}}],[\"树的深度\",{\"0\":{\"81\":1}}],[\"树的深度相关问题\",{\"0\":{\"80\":1},\"1\":{\"58\":2}}],[\"树\",{\"0\":{\"94\":1},\"1\":{\"58\":2},\"2\":{\"86\":1}}],[\"算法\",{\"0\":{\"95\":1},\"1\":{\"58\":2},\"2\":{\"85\":1,\"86\":1}}],[\"文章列表\",{\"1\":{\"58\":3}}],[\"文件中加入一个对象\",{\"1\":{\"76\":1}}],[\"文件名为侧边栏展示名称\",{\"1\":{\"58\":1}}],[\"文件夹改为你要放虚拟机信息的地址\",{\"1\":{\"14\":1}}],[\"遍历就十分简单\",{\"1\":{\"58\":1}}],[\"插入完成后我们还需要遍历\",{\"1\":{\"58\":1}}],[\"插入时使用\",{\"1\":{\"58\":1}}],[\"是文件就放到list集合中\",{\"1\":{\"58\":1}}],[\"是时候该给电脑包收起来了😄\",{\"1\":{\"19\":1}}],[\"`\",{\"1\":{\"58\":3}}],[\"`$\",{\"1\":{\"58\":3}}],[\"$host$1\",{\"1\":{\"77\":1}}],[\"$0\",{\"1\":{\"76\":1}}],[\"$work\",{\"1\":{\"75\":1,\"76\":1}}],[\"$\",{\"1\":{\"58\":3,\"76\":1,\"77\":1}}],[\"<style\",{\"1\":{\"61\":1}}],[\"<div\",{\"1\":{\"61\":1}}],[\"<transition\",{\"1\":{\"61\":1}}],[\"<teleport\",{\"1\":{\"61\":1}}],[\"<template>\",{\"1\":{\"61\":1}}],[\"<\",{\"1\":{\"58\":1,\"61\":5}}],[\"nginx配置\",{\"0\":{\"77\":1}}],[\"npx\",{\"1\":{\"76\":2}}],[\"npm\",{\"1\":{\"75\":1,\"76\":4}}],[\"none\",{\"1\":{\"61\":1}}],[\"nodename\",{\"1\":{\"61\":4}}],[\"nodecollapsable\",{\"1\":{\"58\":1}}],[\"node\",{\"1\":{\"58\":23,\"80\":3,\"81\":1}}],[\"name\",{\"1\":{\"77\":2}}],[\"name=\",{\"1\":{\"61\":1}}],[\"native\",{\"1\":{\"76\":1}}],[\"navigator\",{\"1\":{\"61\":1}}],[\"nullptr\",{\"1\":{\"80\":2}}],[\"null\",{\"1\":{\"58\":4}}],[\"new\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":8,\"58\":5}}],[\"net\",{\"1\":{\"16\":1}}],[\"networksetup2\",{\"1\":{\"8\":1}}],[\"network\",{\"1\":{\"8\":1,\"46\":1,\"51\":1}}],[\"分析目录结构就好\",{\"1\":{\"58\":1}}],[\"分类\",{\"1\":{\"16\":1}}],[\"花亿点时间就好\",{\"1\":{\"58\":1}}],[\"太懒不想手动写侧边栏结构\",{\"1\":{\"58\":1}}],[\"太懒了没去试\",{\"1\":{\"21\":1}}],[\"前端开发\",{\"0\":{\"91\":1},\"1\":{\"58\":2}}],[\"前端\",{\"1\":{\"58\":1},\"2\":{\"56\":1,\"57\":1,\"59\":1,\"60\":1,\"62\":1,\"63\":1}}],[\"前两天遇见了一个很离奇的情况\",{\"1\":{\"8\":1}}],[\"经验|axios封装与api管理\",{\"1\":{\"55\":1}}],[\"至于特殊情况是什么\",{\"1\":{\"55\":1}}],[\"至此我们完成了axios的初步封装\",{\"1\":{\"46\":1}}],[\"至此为止\",{\"1\":{\"21\":1}}],[\"至此\",{\"1\":{\"15\":1,\"54\":1}}],[\"理论上来说无法到达这一步\",{\"1\":{\"55\":1}}],[\"加密方式随意\",{\"1\":{\"55\":1}}],[\"密码要加密传输\",{\"1\":{\"55\":1}}],[\"密码asdb\",{\"1\":{\"21\":1}}],[\"+\",{\"1\":{\"51\":2,\"81\":1}}],[\"处理请求完成业务\",{\"1\":{\"55\":1}}],[\"处理登录成功业务\",{\"1\":{\"55\":1}}],[\"处理网络错误操作\",{\"1\":{\"46\":1,\"51\":1}}],[\"处理状态码不为200时操作\",{\"1\":{\"46\":1,\"51\":1}}],[\"响应拦截器\",{\"0\":{\"46\":1}}],[\"或说未必能获取到\",{\"1\":{\"45\":1,\"51\":1}}],[\"或者使用你熟悉的编辑器打开就好\",{\"1\":{\"67\":1}}],[\"或者可以用switch来匹配状态码进行处理\",{\"1\":{\"46\":1,\"51\":1}}],[\"或者右键\",{\"1\":{\"21\":1}}],[\"或者手机或者平板自带的应用商店也可以\",{\"1\":{\"20\":1}}],[\"未必是有效的\",{\"1\":{\"45\":1,\"51\":1}}],[\"获取到的\",{\"1\":{\"45\":1,\"51\":1}}],[\"实例的时候\",{\"1\":{\"45\":1,\"51\":1}}],[\"实际知道问题了都好说\",{\"1\":{\"8\":1}}],[\"因为git\",{\"1\":{\"69\":1}}],[\"因为错误已经在响应拦截器中被处理了\",{\"1\":{\"55\":1}}],[\"因为创建\",{\"1\":{\"45\":1,\"51\":1}}],[\"因为版本不一样会有好多叫法\",{\"1\":{\"21\":1}}],[\"重命名为post\",{\"1\":{\"75\":1}}],[\"重新获取最新的token\",{\"1\":{\"45\":1,\"51\":1}}],[\"重启一下\",{\"1\":{\"8\":1}}],[\"发起请求时\",{\"1\":{\"45\":1,\"51\":1}}],[\"发现官网给出的居然有两个版本\",{\"1\":{\"23\":1}}],[\"发现微软社区早在18年就有关于这个问题的解决\",{\"1\":{\"8\":1}}],[\"请求拦截器\",{\"0\":{\"45\":1}}],[\"5m\",{\"1\":{\"77\":1}}],[\"5\",{\"1\":{\"61\":2,\"80\":1}}],[\"50\",{\"1\":{\"61\":3}}],[\"5000\",{\"1\":{\"44\":1,\"51\":1}}],[\"56\",{\"1\":{\"8\":1}}],[\"===\",{\"1\":{\"46\":2,\"51\":2,\"58\":5,\"61\":4}}],[\"=>\",{\"1\":{\"45\":2,\"46\":2,\"47\":3,\"48\":3,\"49\":3,\"50\":3,\"51\":22,\"53\":12,\"55\":3,\"58\":5,\"61\":6}}],[\"=\",{\"1\":{\"44\":1,\"45\":2,\"46\":2,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":11,\"53\":2,\"54\":1,\"55\":1,\"58\":22,\"61\":11,\"80\":2,\"81\":2}}],[\"justify\",{\"1\":{\"61\":1}}],[\"july\",{\"1\":{\"16\":2}}],[\"javascript\",{\"2\":{\"57\":1,\"60\":1,\"63\":1}}],[\"js中集中管理所有api即可\",{\"1\":{\"54\":1}}],[\"json中的scripts中添加prepare脚本\",{\"1\":{\"76\":1}}],[\"json配置\",{\"1\":{\"76\":1}}],[\"json\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":10,\"76\":1}}],[\"js\",{\"1\":{\"43\":2,\"51\":1,\"53\":3,\"54\":1,\"58\":1},\"2\":{\"57\":1,\"60\":1,\"63\":1}}],[\"||\",{\"1\":{\"44\":1,\"45\":1,\"46\":2,\"51\":4,\"61\":2}}],[\"|\",{\"1\":{\"43\":8}}],[\"封装axios\",{\"0\":{\"43\":1}}],[\"有个问题\",{\"1\":{\"64\":1}}],[\"有了这玩意\",{\"1\":{\"74\":1}}],[\"有了这个列表\",{\"1\":{\"58\":1}}],[\"有了之前配置远程桌面的经验\",{\"1\":{\"21\":1}}],[\"有些接口你可能要变一下\",{\"1\":{\"42\":1}}],[\"嘿哥们\",{\"1\":{\"42\":1}}],[\"后端的哥们屁颠屁颠的跑过来告诉你\",{\"1\":{\"42\":1}}],[\"后来越来越向流氓靠拢\",{\"1\":{\"8\":1}}],[\"当有一天\",{\"1\":{\"42\":1}}],[\"当然不排除特殊情况\",{\"1\":{\"55\":1}}],[\"当然从理论上讲\",{\"1\":{\"20\":1}}],[\"当然\",{\"1\":{\"14\":1,\"24\":1,\"58\":1,\"61\":1,\"70\":1}}],[\"当然你要空间比较大\",{\"1\":{\"14\":1}}],[\"当然一般回退的情况比较多\",{\"1\":{\"8\":1}}],[\"尤其是在现在当下的前后端分离项目中\",{\"1\":{\"42\":1}}],[\"自己定\",{\"1\":{\"68\":1}}],[\"自己不会的可以去另一个设备上下个驱动精灵网卡版\",{\"1\":{\"8\":1}}],[\"自动生成的逻辑是文件夹为一个分类\",{\"1\":{\"58\":1}}],[\"自然\",{\"0\":{\"39\":1}}],[\"符号\",{\"0\":{\"36\":1}}],[\"地点\",{\"0\":{\"33\":1}}],[\"人物\",{\"0\":{\"30\":1}}],[\"学习\",{\"0\":{\"90\":1},\"2\":{\"28\":1,\"31\":1,\"34\":1,\"37\":1,\"40\":1}}],[\"事物\",{\"0\":{\"27\":1}}],[\"平板玩法\",{\"2\":{\"26\":1}}],[\"平板+windows实现远程唤醒+远程桌面\",{\"0\":{\"19\":1},\"1\":{\"58\":2}}],[\"代表成功开启休眠\",{\"1\":{\"24\":1}}],[\"代码\",{\"1\":{\"8\":1}}],[\"输入powercfg\",{\"1\":{\"24\":1}}],[\"输入ipconfig\",{\"1\":{\"20\":1}}],[\"很离谱\",{\"1\":{\"24\":1}}],[\"能收到封包\",{\"0\":{\"24\":1}}],[\"机械革命的驱动\",{\"1\":{\"23\":1}}],[\"比如仓库叫sample\",{\"1\":{\"68\":1}}],[\"比如cdn\",{\"1\":{\"64\":1}}],[\"比如我们目前有要对用户进行操作的api\",{\"1\":{\"53\":1}}],[\"比如\",{\"1\":{\"23\":1}}],[\"踩过的坑\",{\"0\":{\"22\":1}}],[\"做到这里\",{\"1\":{\"21\":1}}],[\"从公网唤醒这块先挖个坑吧\",{\"1\":{\"21\":1}}],[\"从上往下第一个为从局域网外唤醒\",{\"1\":{\"21\":1}}],[\"端口为你设置的外部端口\",{\"1\":{\"21\":1}}],[\"要说的是这里的\",{\"1\":{\"69\":1}}],[\"要选择最上边的选项\",{\"1\":{\"21\":1}}],[\"要么更新驱动\",{\"1\":{\"8\":1}}],[\"先进入路由器管理界面\",{\"1\":{\"21\":1}}],[\"先说下过程吧\",{\"1\":{\"21\":1}}],[\"同样\",{\"1\":{\"67\":1}}],[\"同样的\",{\"1\":{\"21\":1}}],[\"同一个接口可能还会在不同地方反复请求\",{\"1\":{\"42\":1}}],[\"同学的电脑突然没有无线连接了\",{\"1\":{\"8\":1}}],[\"你还可以在服务器上搭一个gitlab\",{\"1\":{\"70\":1}}],[\"你的服务器ip\",{\"1\":{\"70\":1}}],[\"你就可以在自己电脑上克隆这个仓库了\",{\"1\":{\"70\":1}}],[\"你可以在这里进行一下拷贝操作\",{\"1\":{\"76\":1}}],[\"你可以随便起\",{\"1\":{\"66\":1}}],[\"你可以根据实际情况修改\",{\"1\":{\"58\":1}}],[\"你可以看下下边的踩坑点中是否有你的情况\",{\"1\":{\"21\":1}}],[\"你彻彻底底的成功了\",{\"1\":{\"21\":1}}],[\"你目前已经理论上成功了\",{\"1\":{\"21\":1}}],[\"你理论上就可以进行远程开机了\",{\"1\":{\"21\":1}}],[\"那问题就很简单了\",{\"1\":{\"74\":1}}],[\"那我们的目录名就该为sample\",{\"1\":{\"68\":1}}],[\"那么你就要考虑从网卡生产公司的官网上下载了\",{\"1\":{\"23\":1}}],[\"那么恭喜你\",{\"1\":{\"21\":3}}],[\"那不是更完蛋了\",{\"1\":{\"20\":1}}],[\"直接使用远程仓库的内容\",{\"1\":{\"75\":1}}],[\"直接递归调用就好了\",{\"1\":{\"58\":1}}],[\"直接引入api即可使用\",{\"1\":{\"55\":1}}],[\"直接点击配置项就可向电脑发送开机信号\",{\"1\":{\"21\":1}}],[\"直接去play商店下载就可以了\",{\"1\":{\"20\":1}}],[\"直接去注册表里找到\",{\"1\":{\"8\":1}}],[\"剩下的打包自动部署自动进行呢\",{\"1\":{\"73\":1}}],[\"剩下的都不要配置\",{\"1\":{\"21\":1}}],[\"剩余的配置项默认就好\",{\"1\":{\"13\":1}}],[\"他可以让我们很轻松地使用git\",{\"1\":{\"76\":1}}],[\"他就会帮你填上\",{\"1\":{\"21\":1}}],[\"他会从上到下匹配key\",{\"1\":{\"16\":1}}],[\"第二个为从局域网内唤醒\",{\"1\":{\"21\":1}}],[\"完成后再用刚才的方法进行测试即可\",{\"1\":{\"21\":1}}],[\"完成后点击save即可\",{\"1\":{\"21\":1}}],[\"完成后打开\",{\"1\":{\"21\":1}}],[\"完成后重启\",{\"1\":{\"13\":1}}],[\"安装很简单\",{\"1\":{\"65\":1}}],[\"安装git\",{\"0\":{\"65\":1}}],[\"安装wakeonlan\",{\"1\":{\"21\":1}}],[\"安装完成后\",{\"1\":{\"14\":1}}],[\"系统\",{\"1\":{\"21\":1}}],[\"每次开关机测试很麻烦\",{\"1\":{\"21\":1}}],[\"每天都要背个快5公斤的包做负重训练\",{\"1\":{\"19\":1}}],[\"别急\",{\"1\":{\"21\":1}}],[\"别把文件夹删了就拍屁股走人了\",{\"1\":{\"8\":1}}],[\"把三个全勾上\",{\"1\":{\"21\":1}}],[\"把advanced中有个wake\",{\"1\":{\"21\":1}}],[\"电源管理\",{\"1\":{\"21\":1}}],[\"电脑还没开机\",{\"1\":{\"20\":1}}],[\"网络唤醒和魔术封包唤醒的值都设置为开启\",{\"1\":{\"21\":1}}],[\"网卡\",{\"2\":{\"10\":1}}],[\"网卡接触不良\",{\"1\":{\"8\":1}}],[\"双击打开属性\",{\"1\":{\"21\":1}}],[\"右键此电脑就有\",{\"1\":{\"21\":1}}],[\"都设置为enable就行了\",{\"1\":{\"21\":1}}],[\"开发\",{\"0\":{\"92\":1},\"1\":{\"58\":3},\"2\":{\"56\":1,\"59\":1,\"62\":1}}],[\"开错了不背锅奥\",{\"1\":{\"21\":1}}],[\"开启之后在wintogo中就没办法看到本机的其他磁盘的内容了\",{\"1\":{\"13\":1}}],[\"看官网的解释就好了\",{\"1\":{\"74\":1}}],[\"看一下右上方你选择的是lan还是wan\",{\"1\":{\"21\":1}}],[\"看清楚再开\",{\"1\":{\"21\":1}}],[\"看见带个唤醒的就给他开开\",{\"1\":{\"21\":1}}],[\"字样的就可以\",{\"1\":{\"21\":1}}],[\"过程很简单\",{\"1\":{\"21\":1}}],[\"感觉该遇上和不该遇上的都让我遇上了\",{\"1\":{\"21\":1}}],[\"总之就是\",{\"1\":{\"21\":1}}],[\"总之感觉水星加上花生壳等于一坨谢特\",{\"1\":{\"20\":1}}],[\"总不至于为了用电脑再跑回宿舍吧\",{\"1\":{\"20\":1}}],[\"下载图中第二个驱动后问题解决\",{\"1\":{\"23\":1}}],[\"下载完之后放到\",{\"1\":{\"16\":1}}],[\"下边我们来进行测试\",{\"1\":{\"21\":1}}],[\"下来又有一个问题\",{\"1\":{\"20\":1}}],[\"等我在摸索摸索\",{\"1\":{\"20\":1}}],[\"等下遇见具体的再说\",{\"1\":{\"8\":1}}],[\"最简单的就是递归\",{\"1\":{\"81\":1}}],[\"最早我的博客是在在用github\",{\"1\":{\"64\":1}}],[\"最早的时候我不知道为什么把休眠给关了\",{\"1\":{\"24\":1}}],[\"最重要的还是水星的这个ddns我一直没有给配成功\",{\"1\":{\"20\":1}}],[\"最终配置\",{\"0\":{\"16\":1}}],[\"现在我可以抱着板子在学校任意一个地方连接我的电脑了\",{\"1\":{\"20\":1}}],[\"现在来完成最终的配置\",{\"1\":{\"15\":1}}],[\"也看了很多文章\",{\"1\":{\"76\":1}}],[\"也就是说当我们执行npm\",{\"1\":{\"76\":1}}],[\"也就是钩子\",{\"1\":{\"74\":1}}],[\"也就是你能看到的\",{\"1\":{\"16\":1}}],[\"也可以看看这一项是否关闭\",{\"1\":{\"24\":1}}],[\"也可以在学校认证界面查看\",{\"1\":{\"20\":1}}],[\"找了一圈发现\",{\"1\":{\"75\":1}}],[\"找不到就直接进设置搜索\",{\"1\":{\"21\":1}}],[\"找带有\",{\"1\":{\"21\":1}}],[\"找一个自己好记的就行\",{\"1\":{\"20\":1}}],[\"找到你的有线网卡\",{\"1\":{\"21\":1}}],[\"找到你电脑的ip点击绑定即可\",{\"1\":{\"20\":1}}],[\"找到你上网使用的网卡\",{\"1\":{\"20\":1}}],[\"外部端口随意\",{\"1\":{\"20\":1,\"21\":1}}],[\"点击的对象如果是对应的表格\",{\"1\":{\"61\":1}}],[\"点击主页中的配置\",{\"1\":{\"21\":1}}],[\"点击封包监控诊断工具\",{\"1\":{\"21\":1}}],[\"点击上方的高级\",{\"1\":{\"21\":1}}],[\"点击属性\",{\"1\":{\"21\":1}}],[\"点击高级设置\",{\"1\":{\"20\":1}}],[\"点击新建\",{\"1\":{\"20\":1}}],[\"进入服务器的git仓库的hooks目录\",{\"1\":{\"75\":1}}],[\"进入\",{\"1\":{\"68\":1}}],[\"进入用户git的目录下\",{\"1\":{\"67\":1}}],[\"进入高级设置\",{\"1\":{\"20\":1,\"21\":1}}],[\"进入设置\",{\"1\":{\"20\":1}}],[\"以便身份确认\",{\"1\":{\"67\":1}}],[\"以管理员身份打开powershell\",{\"1\":{\"24\":1}}],[\"以及在boot中有个boot\",{\"1\":{\"21\":1}}],[\"以我的机械革命为例吧\",{\"1\":{\"21\":1}}],[\"以水星路由器为例\",{\"1\":{\"20\":1}}],[\"以供以后参考\",{\"1\":{\"11\":1}}],[\"保存即可\",{\"1\":{\"20\":1}}],[\"将左枝和右枝的深度取最大加一就好\",{\"1\":{\"81\":1}}],[\"将打包后的文件夹添加的暂存区\",{\"1\":{\"76\":1}}],[\"将其与远程仓库的分支保持一致\",{\"1\":{\"75\":1}}],[\"将仓库内容clone下来\",{\"1\":{\"75\":1}}],[\"将post\",{\"1\":{\"75\":1}}],[\"将git\",{\"1\":{\"69\":1}}],[\"将所有者改为git\",{\"1\":{\"68\":1}}],[\"将公钥复制进authorized\",{\"1\":{\"67\":1}}],[\"将关机\",{\"1\":{\"21\":1}}],[\"将远程桌面打开即可\",{\"1\":{\"20\":1}}],[\"将下好的vtoyboot\",{\"1\":{\"14\":1}}],[\">right\",{\"1\":{\"81\":1}}],[\">left\",{\"1\":{\"81\":1}}],[\">\",{\"1\":{\"61\":3}}],[\">基本设置中的ip地址\",{\"1\":{\"21\":1}}],[\">基本设置中的ip地址即为学校内网ip\",{\"1\":{\"20\":1}}],[\">wan口参数\",{\"1\":{\"20\":1,\"21\":1}}],[\">添加\",{\"1\":{\"20\":1,\"21\":1}}],[\">虚拟服务器\",{\"1\":{\"20\":1,\"21\":1}}],[\">高级用户\",{\"1\":{\"20\":1,\"21\":1}}],[\">ip与mac绑定\",{\"1\":{\"20\":1}}],[\">网络参数\",{\"1\":{\"20\":1}}],[\">远程桌面\",{\"1\":{\"20\":1}}],[\">系统\",{\"1\":{\"20\":1}}],[\"与此同时我们先进行windows的设置\",{\"1\":{\"20\":1}}],[\"应该都挺好理解的\",{\"1\":{\"77\":1}}],[\"应该是卸载时的问题\",{\"1\":{\"8\":1}}],[\"应用商店没且play商店访问不了可以试一试图中在\",{\"1\":{\"20\":1}}],[\"在每次git\",{\"1\":{\"76\":1}}],[\"在提交代码时运行我们想要的脚本\",{\"1\":{\"76\":1}}],[\"在到达时间节点时\",{\"1\":{\"74\":1}}],[\"在我们使用github时\",{\"1\":{\"67\":1}}],[\"在client\",{\"1\":{\"61\":1}}],[\"在\",{\"1\":{\"61\":1}}],[\"在收集markdown表情时突发奇想想搞个点击复制的组件\",{\"1\":{\"61\":1}}],[\"在使用时\",{\"1\":{\"55\":1}}],[\"在写了一些屎山之后发现统一的api管理真的很重要\",{\"1\":{\"42\":1}}],[\"在此界面即可\",{\"1\":{\"21\":1}}],[\"在下边的踩坑点中有解决办法\",{\"1\":{\"21\":1}}],[\"在宿舍我貌似不需要这个\",{\"1\":{\"20\":1}}],[\"在更多设备安装\",{\"1\":{\"20\":1}}],[\"在app\",{\"1\":{\"20\":1}}],[\"在windows下解压好后直接将sh文件发到虚拟机中\",{\"1\":{\"14\":1}}],[\"用自己喜欢的就好\",{\"1\":{\"69\":1}}],[\"用户并归属于\",{\"1\":{\"66\":1}}],[\"用户组\",{\"1\":{\"66\":2}}],[\"用于将一个文件路径插入树中\",{\"1\":{\"58\":1}}],[\"用于查找对应元素是否在树中\",{\"1\":{\"58\":1}}],[\"用微软官方的remote\",{\"1\":{\"20\":1}}],[\"用完记得删了\",{\"1\":{\"8\":1}}],[\"远程开发\",{\"2\":{\"26\":1}}],[\"远程唤醒只支持有线网络连接\",{\"1\":{\"21\":1}}],[\"远程唤醒\",{\"0\":{\"21\":1}}],[\"远程桌面\",{\"0\":{\"20\":1}}],[\"远程连接\",{\"2\":{\"7\":1}}],[\"再完善完善就把他整成个npm包☺️\",{\"1\":{\"58\":1}}],[\"再比如还有针对预约的增删改查的api\",{\"1\":{\"53\":1}}],[\"再次回到remote\",{\"1\":{\"20\":1}}],[\"再回到网络设置\",{\"1\":{\"20\":1}}],[\"再加上其他东西\",{\"1\":{\"19\":1}}],[\"再选择安装的位置\",{\"1\":{\"13\":1}}],[\"游戏本性能很好\",{\"1\":{\"19\":1}}],[\"众所周知\",{\"1\":{\"19\":1}}],[\"心心念念的平板终于到手了\",{\"1\":{\"19\":1}}],[\"启动盘\",{\"2\":{\"18\":1}}],[\"启动时会按字母顺序升序显示\",{\"1\":{\"16\":1}}],[\"z\",{\"1\":{\"61\":1}}],[\"zorin\",{\"1\":{\"16\":2}}],[\"zh\",{\"1\":{\"16\":3}}],[\"origin\",{\"1\":{\"75\":2,\"76\":2}}],[\"org\",{\"1\":{\"16\":1}}],[\"opacity\",{\"1\":{\"61\":1}}],[\"options\",{\"1\":{\"58\":7}}],[\"opt\",{\"1\":{\"58\":2}}],[\"opensuse\",{\"1\":{\"16\":2}}],[\"onmounted\",{\"1\":{\"61\":2}}],[\"on回车就好\",{\"1\":{\"24\":1}}],[\"on\",{\"1\":{\"21\":5,\"77\":1}}],[\"os\",{\"1\":{\"16\":4}}],[\"kubuntu\",{\"1\":{\"16\":2}}],[\"keys\",{\"1\":{\"67\":2}}],[\"keys文件\",{\"1\":{\"67\":1}}],[\"keys文件中\",{\"1\":{\"67\":1}}],[\"key\",{\"1\":{\"16\":22,\"77\":2}}],[\"kali\",{\"1\":{\"16\":4}}],[\"permanent\",{\"1\":{\"77\":1}}],[\"protocols\",{\"1\":{\"77\":1}}],[\"project\",{\"1\":{\"76\":3}}],[\"promise\",{\"1\":{\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":8}}],[\"prefer\",{\"1\":{\"77\":1}}],[\"prefix\",{\"1\":{\"58\":8}}],[\"pre\",{\"1\":{\"76\":2}}],[\"prepare脚本会在npm\",{\"1\":{\"76\":1}}],[\"prepare\",{\"1\":{\"76\":1}}],[\"pull\",{\"1\":{\"75\":1,\"76\":1}}],[\"pulling\",{\"1\":{\"75\":1,\"76\":1}}],[\"pub\",{\"1\":{\"67\":1}}],[\"push\",{\"1\":{\"58\":4}}],[\"put\",{\"1\":{\"50\":2,\"51\":3,\"53\":4}}],[\"put方法\",{\"0\":{\"50\":1}}],[\"package\",{\"1\":{\"76\":1}}],[\"passwd\",{\"1\":{\"69\":1}}],[\"passwd文件\",{\"1\":{\"69\":1}}],[\"password\",{\"1\":{\"55\":2}}],[\"pages\",{\"1\":{\"64\":1}}],[\"padding\",{\"1\":{\"61\":1}}],[\"pattern\",{\"1\":{\"58\":5}}],[\"path=\",{\"1\":{\"75\":1,\"76\":1}}],[\"path变量\",{\"1\":{\"75\":1}}],[\"path\",{\"1\":{\"58\":3,\"75\":3,\"76\":2,\"77\":3}}],[\"parent\",{\"1\":{\"58\":4}}],[\"params\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":12,\"53\":20,\"55\":2}}],[\"position\",{\"1\":{\"61\":1}}],[\"postspath\",{\"1\":{\"58\":4}}],[\"posts\",{\"0\":{\"88\":1},\"1\":{\"58\":4}}],[\"postmultipart\",{\"1\":{\"51\":3}}],[\"post上传文件\",{\"0\":{\"51\":1}}],[\"post\",{\"1\":{\"47\":2,\"51\":5,\"53\":5,\"75\":3}}],[\"post方法\",{\"0\":{\"47\":1}}],[\"pointer\",{\"1\":{\"61\":1}}],[\"popup\",{\"1\":{\"61\":7}}],[\"pop\",{\"1\":{\"16\":2}}],[\"pci\",{\"1\":{\"21\":1}}],[\"plugin\",{\"1\":{\"16\":1}}],[\"pf2\",{\"1\":{\"16\":5}}],[\"匹配用的主要是上边的alias\",{\"1\":{\"16\":1}}],[\"主体函数如下\",{\"1\":{\"58\":1}}],[\"主要是用于图标的显示\",{\"1\":{\"16\":1}}],[\"主题\",{\"1\":{\"16\":1}}],[\"anull\",{\"1\":{\"77\":1}}],[\"and\",{\"1\":{\"76\":1}}],[\"aes128\",{\"1\":{\"77\":1}}],[\"add\",{\"1\":{\"76\":4}}],[\"addeventlistener\",{\"1\":{\"61\":2}}],[\"all\",{\"1\":{\"61\":1}}],[\"align\",{\"1\":{\"61\":1}}],[\"alias\",{\"1\":{\"16\":10}}],[\"active\",{\"1\":{\"61\":2}}],[\"accept\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6}}],[\"as\",{\"1\":{\"61\":2}}],[\"assets\",{\"1\":{\"43\":1}}],[\"array\",{\"1\":{\"58\":4}}],[\"arch\",{\"1\":{\"16\":3}}],[\"archlinux\",{\"1\":{\"16\":1}}],[\"a\",{\"1\":{\"58\":2}}],[\"authorized\",{\"1\":{\"67\":2}}],[\"auth\",{\"1\":{\"53\":5,\"54\":1,\"55\":1}}],[\"apt\",{\"1\":{\"65\":1}}],[\"app\",{\"1\":{\"61\":3}}],[\"appendchild\",{\"1\":{\"58\":2}}],[\"appointment\",{\"1\":{\"53\":7,\"54\":1}}],[\"appointmentapi\",{\"1\":{\"53\":3,\"54\":3}}],[\"application\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":10}}],[\"api整合\",{\"0\":{\"54\":1}}],[\"api分组\",{\"0\":{\"53\":1}}],[\"api封装文件\",{\"1\":{\"43\":1}}],[\"api\",{\"1\":{\"43\":1,\"54\":2,\"55\":3}}],[\"axios封装\",{\"1\":{\"58\":2}}],[\"axios封装与api管理完成\",{\"1\":{\"54\":1}}],[\"axios封装与api的统一管理\",{\"0\":{\"42\":1}}],[\"axios\",{\"1\":{\"44\":3,\"45\":1,\"51\":2},\"2\":{\"57\":1}}],[\"amd64\",{\"1\":{\"16\":2}}],[\"x\",{\"1\":{\"69\":2}}],[\"x86\",{\"1\":{\"16\":2}}],[\"x64\",{\"1\":{\"16\":2}}],[\"80\",{\"1\":{\"77\":1}}],[\"8080\",{\"1\":{\"44\":1,\"51\":1}}],[\"8\",{\"1\":{\"16\":3,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":4,\"80\":1}}],[\"dhe\",{\"1\":{\"77\":1}}],[\"domain\",{\"1\":{\"77\":2}}],[\"done\",{\"1\":{\"75\":1,\"76\":1}}],[\"docs\",{\"1\":{\"75\":2,\"76\":3}}],[\"document\",{\"1\":{\"61\":1}}],[\"dist\",{\"1\":{\"76\":3,\"77\":1}}],[\"display\",{\"1\":{\"61\":1}}],[\"div>\",{\"1\":{\"61\":1}}],[\"dirname\",{\"1\":{\"76\":1}}],[\"dir\",{\"1\":{\"58\":3,\"75\":2,\"76\":1}}],[\"date\",{\"1\":{\"51\":2}}],[\"data\",{\"1\":{\"46\":1,\"47\":1,\"50\":1,\"51\":7,\"58\":13}}],[\"dvd1\",{\"1\":{\"16\":1}}],[\"dvd\",{\"1\":{\"16\":2}}],[\"depth\",{\"1\":{\"81\":7}}],[\"deploy\",{\"1\":{\"75\":1,\"76\":1}}],[\"defineclientconfig\",{\"1\":{\"61\":2}}],[\"default\",{\"1\":{\"16\":2,\"53\":2,\"54\":1,\"61\":1}}],[\"deleteappointment\",{\"1\":{\"53\":1}}],[\"delete\",{\"1\":{\"49\":1,\"51\":1}}],[\"del\",{\"1\":{\"49\":1,\"51\":2,\"53\":3}}],[\"del方法\",{\"0\":{\"49\":1}}],[\"deepin\",{\"1\":{\"16\":2}}],[\"debian\",{\"1\":{\"16\":2}}],[\"desktop进行连接即可\",{\"1\":{\"20\":1}}],[\"desktop下载好以后打开\",{\"1\":{\"20\":1}}],[\"desktop\",{\"1\":{\"16\":1,\"20\":2}}],[\"dejavusans\",{\"1\":{\"16\":2}}],[\"unset\",{\"1\":{\"75\":1,\"76\":1}}],[\"usr\",{\"1\":{\"69\":1,\"76\":1}}],[\"useradd\",{\"1\":{\"66\":1}}],[\"userapi\",{\"1\":{\"53\":3,\"54\":3}}],[\"user\",{\"1\":{\"61\":1}}],[\"username\",{\"1\":{\"55\":2}}],[\"use\",{\"1\":{\"45\":1,\"46\":1,\"51\":2}}],[\"url\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":12}}],[\"update脚本了\",{\"1\":{\"76\":1}}],[\"update\",{\"1\":{\"75\":7}}],[\"updateappointment\",{\"1\":{\"53\":1}}],[\"updateuserinfo\",{\"1\":{\"53\":1}}],[\"updated\",{\"1\":{\"16\":2}}],[\"up\",{\"1\":{\"21\":1}}],[\"ubuntutogo\",{\"1\":{\"16\":2}}],[\"ubuntu\",{\"1\":{\"16\":6}}],[\"u盘根目录\",{\"1\":{\"16\":1}}],[\"u盘里即可\",{\"1\":{\"16\":1}}],[\"2a\",{\"1\":{\"16\":1}}],[\"2\",{\"1\":{\"16\":1,\"77\":1,\"80\":1}}],[\"22\",{\"1\":{\"16\":3,\"20\":1}}],[\"22h2\",{\"1\":{\"16\":2}}],[\"2050年了你还在手动上传服务器然后手动打包部署\",{\"1\":{\"73\":1}}],[\"200\",{\"1\":{\"46\":1,\"51\":1}}],[\"2023\",{\"1\":{\"16\":4}}],[\"20\",{\"1\":{\"16\":1}}],[\"镜像目录\",{\"1\":{\"16\":1}}],[\"right\",{\"1\":{\"80\":1,\"81\":2}}],[\"rc4\",{\"1\":{\"77\":1}}],[\"run\",{\"1\":{\"75\":2,\"76\":3}}],[\"r\",{\"1\":{\"68\":1}}],[\"rsa\",{\"1\":{\"67\":1,\"77\":1}}],[\"rgba\",{\"1\":{\"61\":1}}],[\"radius\",{\"1\":{\"61\":1}}],[\"router\",{\"1\":{\"61\":1}}],[\"rooticon\",{\"1\":{\"58\":1}}],[\"rootname\",{\"1\":{\"58\":1}}],[\"rootcollapsable\",{\"1\":{\"58\":1}}],[\"root\",{\"1\":{\"16\":1,\"58\":19,\"77\":1,\"81\":4}}],[\"rewrite\",{\"1\":{\"77\":1}}],[\"repo\",{\"1\":{\"68\":1,\"70\":1,\"75\":1}}],[\"repo目录\",{\"1\":{\"68\":1}}],[\"repos目录下为例\",{\"1\":{\"68\":1}}],[\"replace\",{\"1\":{\"58\":3}}],[\"ref\",{\"1\":{\"61\":3}}],[\"readdirsync\",{\"1\":{\"58\":1}}],[\"readdir\",{\"1\":{\"58\":3}}],[\"register\",{\"1\":{\"53\":2}}],[\"regular\",{\"1\":{\"16\":1}}],[\"reset\",{\"1\":{\"75\":1,\"76\":1}}],[\"res\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":12,\"55\":1}}],[\"resolve\",{\"1\":{\"46\":1,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":13,\"58\":1}}],[\"responsecode\",{\"1\":{\"46\":3,\"51\":3}}],[\"response\",{\"1\":{\"46\":6,\"51\":6}}],[\"reject\",{\"1\":{\"45\":1,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":13}}],[\"return\",{\"1\":{\"45\":2,\"46\":3,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":11,\"58\":9,\"61\":2,\"81\":2}}],[\"request\",{\"1\":{\"43\":1,\"44\":1,\"45\":2,\"46\":1,\"51\":6,\"53\":2}}],[\"remote\",{\"1\":{\"20\":1}}],[\"即你要克隆仓库进行打包的位置\",{\"1\":{\"75\":1}}],[\"即用户名没有改\",{\"1\":{\"69\":1}}],[\"即可\",{\"1\":{\"20\":1}}],[\"即\",{\"1\":{\"16\":1}}],[\"反正是找到themem\",{\"1\":{\"16\":1}}],[\"gcm\",{\"1\":{\"77\":1}}],[\"g\",{\"1\":{\"66\":1}}],[\"groupadd\",{\"1\":{\"66\":1}}],[\"git会执行对应的自定义脚本\",{\"1\":{\"74\":1}}],[\"git仓库地址\",{\"1\":{\"70\":1}}],[\"git应该为你实际创建的用户的用户目录\",{\"1\":{\"69\":1}}],[\"git结尾\",{\"1\":{\"68\":1}}],[\"git\",{\"0\":{\"74\":1},\"1\":{\"65\":1,\"66\":6,\"67\":1,\"68\":6,\"69\":4,\"70\":5,\"75\":10,\"76\":7},\"2\":{\"72\":1,\"79\":2}}],[\"git部署私服\",{\"0\":{\"64\":1}}],[\"getsidebar\",{\"1\":{\"58\":1}}],[\"gettodoappointmentsum\",{\"1\":{\"53\":2}}],[\"gettime\",{\"1\":{\"51\":2}}],[\"getappointment\",{\"1\":{\"53\":1}}],[\"getappointmentlist\",{\"1\":{\"53\":1}}],[\"getuserinfo\",{\"1\":{\"53\":1}}],[\"get\",{\"1\":{\"48\":2,\"51\":3,\"53\":8,\"81\":3}}],[\"get方法\",{\"0\":{\"48\":1}}],[\"getitem\",{\"1\":{\"44\":1,\"45\":1,\"51\":2}}],[\"gnu\",{\"1\":{\"16\":1}}],[\"gnome\",{\"1\":{\"16\":1}}],[\"gfxmode\",{\"1\":{\"16\":1}}],[\"go\",{\"0\":{\"13\":1,\"14\":1}}],[\"go批\",{\"1\":{\"4\":1}}],[\"各种主题可以在https\",{\"1\":{\"16\":1}}],[\"id\",{\"1\":{\"67\":1}}],[\"icon\",{\"1\":{\"58\":2}}],[\"items\",{\"1\":{\"61\":1}}],[\"item\",{\"1\":{\"58\":3}}],[\"i++\",{\"1\":{\"58\":1}}],[\"i\",{\"1\":{\"58\":3}}],[\"isdirectory\",{\"1\":{\"58\":1}}],[\"isroot\",{\"1\":{\"58\":2}}],[\"isleaf\",{\"1\":{\"58\":3}}],[\"iso\",{\"1\":{\"16\":9}}],[\"iso拷贝到虚拟机中\",{\"1\":{\"14\":1}}],[\"if=\",{\"1\":{\"61\":1}}],[\"if\",{\"1\":{\"46\":2,\"51\":2,\"58\":11,\"61\":4,\"81\":1}}],[\"improves\",{\"1\":{\"76\":1}}],[\"import\",{\"1\":{\"44\":1,\"53\":2,\"54\":2,\"55\":1,\"58\":2,\"61\":3}}],[\"image\",{\"1\":{\"16\":9}}],[\"images\",{\"1\":{\"16\":10}}],[\"int\",{\"1\":{\"80\":1,\"81\":3}}],[\"interceptors\",{\"1\":{\"45\":1,\"46\":1,\"51\":2}}],[\"init\",{\"1\":{\"68\":1}}],[\"innertext\",{\"1\":{\"61\":1}}],[\"insert\",{\"1\":{\"58\":2}}],[\"install命令\",{\"1\":{\"76\":1}}],[\"install安装完项目依赖后会执行husky\",{\"1\":{\"76\":1}}],[\"install之后自动执行\",{\"1\":{\"76\":1}}],[\"install\",{\"1\":{\"65\":1,\"76\":2}}],[\"installer\",{\"1\":{\"16\":1}}],[\"instance\",{\"1\":{\"58\":2}}],[\"instanceof\",{\"1\":{\"58\":2}}],[\"info\",{\"1\":{\"53\":2}}],[\"includes\",{\"1\":{\"46\":1,\"51\":1}}],[\"index\",{\"1\":{\"43\":1,\"54\":1,\"58\":2,\"61\":1,\"77\":2}}],[\"ip地址这一栏填的是你在网络设置\",{\"1\":{\"21\":1}}],[\"ip地址为你电脑地址\",{\"1\":{\"21\":1}}],[\"ip地址为电脑ip\",{\"1\":{\"20\":1}}],[\"ipv4地址即为电脑内网ip\",{\"1\":{\"20\":1}}],[\"3\",{\"1\":{\"80\":1}}],[\"3s\",{\"1\":{\"61\":1}}],[\"3384\",{\"1\":{\"20\":1}}],[\"30\",{\"1\":{\"16\":1}}],[\"3都试了\",{\"1\":{\"8\":1}}],[\"f\",{\"1\":{\"75\":1,\"76\":3}}],[\"fff\",{\"1\":{\"61\":1}}],[\"flex\",{\"1\":{\"61\":1}}],[\"flt\",{\"1\":{\"16\":1}}],[\"fs\",{\"1\":{\"58\":4}}],[\"false\",{\"1\":{\"58\":5,\"61\":2}}],[\"fit\",{\"1\":{\"61\":1}}],[\"fixed\",{\"1\":{\"61\":1}}],[\"find\",{\"1\":{\"58\":2}}],[\"finally\",{\"1\":{\"55\":1}}],[\"files\",{\"1\":{\"58\":2}}],[\"filepath\",{\"1\":{\"58\":4}}],[\"filelist\",{\"1\":{\"58\":4}}],[\"file\",{\"1\":{\"16\":2,\"58\":5}}],[\"folder\",{\"1\":{\"77\":1}}],[\"font\",{\"1\":{\"61\":1}}],[\"fonts\",{\"1\":{\"16\":1}}],[\"foreach\",{\"1\":{\"58\":3,\"61\":1}}],[\"for\",{\"1\":{\"58\":1}}],[\"form\",{\"1\":{\"51\":2}}],[\"function\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6,\"58\":3}}],[\"from\",{\"1\":{\"44\":1,\"53\":2,\"54\":2,\"55\":1,\"58\":2,\"61\":4}}],[\"f69501d4\",{\"1\":{\"16\":1}}],[\"ftp\",{\"1\":{\"14\":1}}],[\"tlsv1\",{\"1\":{\"77\":3}}],[\"td\",{\"1\":{\"61\":2}}],[\"ts中做如下声明即可\",{\"1\":{\"61\":1}}],[\"ts文件中导入即可\",{\"1\":{\"61\":1}}],[\"translate\",{\"1\":{\"61\":1}}],[\"translatex\",{\"1\":{\"61\":1}}],[\"transition\",{\"1\":{\"61\":1}}],[\"transition>\",{\"1\":{\"61\":1}}],[\"transform\",{\"1\":{\"61\":2}}],[\"traverse\",{\"1\":{\"58\":4}}],[\"true\",{\"1\":{\"58\":9,\"61\":1}}],[\"tree\",{\"1\":{\"16\":1,\"58\":7,\"81\":3}}],[\"template>\",{\"1\":{\"61\":1}}],[\"teleport>\",{\"1\":{\"61\":1}}],[\"text\",{\"1\":{\"58\":15,\"61\":3}}],[\"test\",{\"1\":{\"58\":2}}],[\"terminus\",{\"1\":{\"16\":3}}],[\"table\",{\"1\":{\"61\":4}}],[\"tables\",{\"1\":{\"61\":3}}],[\"tableclick2copy\",{\"1\":{\"61\":4}}],[\"target\",{\"1\":{\"58\":2,\"61\":10}}],[\"tag=ventoy这里下载\",{\"1\":{\"16\":1}}],[\"t\",{\"1\":{\"58\":1}}],[\"throw\",{\"1\":{\"58\":2}}],[\"this\",{\"1\":{\"58\":12}}],[\"then\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6,\"55\":1}}],[\"themes\",{\"1\":{\"16\":6}}],[\"theme\",{\"1\":{\"16\":2}}],[\"type\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6}}],[\"txt\",{\"1\":{\"16\":1}}],[\"txt文件就行\",{\"1\":{\"16\":1}}],[\"timeout\",{\"1\":{\"16\":2,\"44\":1,\"46\":1,\"51\":2,\"77\":1}}],[\"top\",{\"1\":{\"61\":1}}],[\"to=\",{\"1\":{\"61\":1}}],[\"todo\",{\"1\":{\"53\":2,\"82\":1,\"83\":1,\"84\":1}}],[\"token\",{\"1\":{\"44\":2,\"45\":5,\"51\":7}}],[\"to\",{\"0\":{\"13\":1,\"14\":1},\"1\":{\"61\":1,\"75\":2,\"76\":1,\"77\":3}}],[\"togo的一个启动盘\",{\"1\":{\"11\":1}}],[\"togo\",{\"1\":{\"11\":1,\"16\":3},\"2\":{\"18\":2}}],[\"1911\",{\"1\":{\"16\":2}}],[\"1920x1080\",{\"1\":{\"16\":1}}],[\"11\",{\"1\":{\"16\":2,\"70\":1}}],[\"11ce\",{\"1\":{\"8\":1}}],[\"1001\",{\"1\":{\"69\":4}}],[\"100\",{\"1\":{\"61\":1}}],[\"1000\",{\"1\":{\"61\":1}}],[\"10\",{\"1\":{\"16\":2,\"61\":1}}],[\"16\",{\"1\":{\"16\":1}}],[\"14\",{\"1\":{\"16\":2,\"70\":1}}],[\"12px\",{\"1\":{\"61\":1}}],[\"12\",{\"1\":{\"16\":1,\"20\":1}}],[\"1\",{\"1\":{\"16\":6,\"58\":1,\"61\":1,\"77\":1,\"80\":1,\"81\":1}}],[\"mkdir\",{\"1\":{\"67\":1}}],[\"more\",{\"1\":{\"76\":1}}],[\"mouseover\",{\"1\":{\"61\":1}}],[\"modern\",{\"1\":{\"76\":1}}],[\"mode\",{\"1\":{\"16\":1}}],[\"md5\",{\"1\":{\"77\":1}}],[\"md$\",{\"1\":{\"58\":1}}],[\"md插入到posts节点下的开发节点下的前端开发的子节点中\",{\"1\":{\"58\":1}}],[\"md\",{\"1\":{\"58\":3}}],[\"must\",{\"1\":{\"58\":1}}],[\"multipart\",{\"1\":{\"51\":2}}],[\"method\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6}}],[\"message\",{\"1\":{\"46\":2,\"51\":2}}],[\"menuclass\",{\"1\":{\"16\":1}}],[\"menu\",{\"1\":{\"16\":6}}],[\"max\",{\"1\":{\"81\":1}}],[\"made\",{\"1\":{\"76\":1}}],[\"map\",{\"1\":{\"58\":2}}],[\"markdown\",{\"0\":{\"89\":1},\"2\":{\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"34\":1,\"35\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1}}],[\"markdown表情\",{\"0\":{\"27\":1,\"30\":1,\"33\":1,\"36\":1,\"39\":1}}],[\"manjaro\",{\"1\":{\"16\":2}}],[\"machine\",{\"1\":{\"8\":2}}],[\"所有结点及其子树的深度之和\",{\"0\":{\"83\":1}}],[\"所有子树的深度之和\",{\"0\":{\"82\":1}}],[\"所有准备工作都以完成\",{\"1\":{\"15\":1}}],[\"所以每次出门都需要带上电脑和适配器\",{\"1\":{\"19\":1}}],[\"所以我分了100g给了wintogo这里因人而异\",{\"1\":{\"13\":1}}],[\"所以\",{\"1\":{\"8\":1}}],[\"首先在客户端用git\",{\"1\":{\"76\":1}}],[\"首先我们先了解一下git\",{\"1\":{\"74\":1}}],[\"首先我们要找到放仓库的地方\",{\"1\":{\"68\":1}}],[\"首先是vuepress插件的使用\",{\"1\":{\"61\":1}}],[\"首先说明\",{\"1\":{\"80\":1}}],[\"首先说一下我们的目录结构\",{\"1\":{\"43\":1}}],[\"首先说下\",{\"1\":{\"21\":1}}],[\"首先\",{\"1\":{\"21\":1}}],[\"首先将u盘格式化为ntfs格式\",{\"1\":{\"15\":1}}],[\"首先打开wtg辅助工具\",{\"1\":{\"13\":1}}],[\"备用\",{\"1\":{\"14\":1}}],[\"如何当一个撒手掌柜呢\",{\"1\":{\"73\":1}}],[\"如\",{\"1\":{\"55\":1,\"58\":1,\"70\":1,\"76\":1}}],[\"如下\",{\"1\":{\"53\":1}}],[\"如果按照本文配置用户部分走的话\",{\"1\":{\"69\":1}}],[\"如果有多个\",{\"1\":{\"67\":1}}],[\"如果有就麻烦佬们给个点子😚\",{\"1\":{\"61\":1}}],[\"如果要加token验证的话可以带上\",{\"1\":{\"44\":1,\"51\":1}}],[\"如果你创建的用户不叫git那就去到相应的目录下\",{\"1\":{\"67\":1}}],[\"如果你一个人承包了前后端的话\",{\"1\":{\"42\":1}}],[\"如果你不能正常启动\",{\"1\":{\"24\":1}}],[\"如果你的网卡驱动是从笔记本供应商的官网下载的并且还不支持\",{\"1\":{\"23\":1}}],[\"如果你没有任何问题\",{\"1\":{\"21\":1}}],[\"如果不能正常开机\",{\"1\":{\"21\":1}}],[\"如果不清楚\",{\"1\":{\"20\":1}}],[\"如果正常开机\",{\"1\":{\"21\":1}}],[\"如果没有vim就安装一下\",{\"1\":{\"67\":1}}],[\"如果没有\",{\"1\":{\"21\":1,\"67\":1}}],[\"如果没有配置信息\",{\"1\":{\"21\":1}}],[\"如果此时工具中显示出收到好多封包\",{\"1\":{\"21\":1}}],[\"如果这篇文章的链接失效了\",{\"1\":{\"21\":1}}],[\"如果人不在寝室\",{\"1\":{\"20\":1}}],[\"如果匹配到就会把这个镜像归为这个类\",{\"1\":{\"16\":1}}],[\"如果想进行设置\",{\"1\":{\"13\":1}}],[\"如xxx\",{\"1\":{\"14\":1}}],[\"建议备份一下\",{\"1\":{\"14\":1}}],[\"还有更简单的\",{\"1\":{\"14\":1}}],[\"执行成功后关机\",{\"1\":{\"14\":1}}],[\"blog\",{\"1\":{\"76\":1}}],[\"bushi\",{\"1\":{\"76\":1}}],[\"build\",{\"1\":{\"75\":2,\"76\":3}}],[\"building\",{\"1\":{\"75\":1,\"76\":4}}],[\"branch\",{\"1\":{\"75\":2,\"76\":2}}],[\"browse\",{\"1\":{\"16\":1}}],[\"bin\",{\"1\":{\"69\":2,\"75\":1,\"76\":2}}],[\"bigsur\",{\"1\":{\"16\":6}}],[\"bare\",{\"1\":{\"68\":1}}],[\"background\",{\"1\":{\"61\":1}}],[\"basepath\",{\"1\":{\"58\":3}}],[\"baseurl\",{\"1\":{\"44\":1,\"51\":1}}],[\"bash改为git\",{\"1\":{\"69\":1}}],[\"bash\",{\"1\":{\"14\":1,\"75\":1,\"76\":1}}],[\"be\",{\"1\":{\"58\":2}}],[\"beta\",{\"1\":{\"16\":1}}],[\"border\",{\"1\":{\"61\":1}}],[\"book\",{\"1\":{\"58\":3}}],[\"boot\",{\"1\":{\"21\":1}}],[\"boundary=\",{\"1\":{\"51\":2}}],[\"by\",{\"1\":{\"21\":1}}],[\"bfc1\",{\"1\":{\"8\":1}}],[\"使用husky\",{\"1\":{\"76\":1}}],[\"使用\",{\"0\":{\"55\":1},\"1\":{\"75\":1}}],[\"使用网络唤醒计算机中提到的\",{\"1\":{\"21\":1}}],[\"使用ip或者melogin\",{\"1\":{\"20\":1}}],[\"使用命令sudo\",{\"1\":{\"14\":1}}],[\"使用256g洋垃圾打造3合1移动硬盘\",{\"0\":{\"11\":1},\"1\":{\"58\":2}}],[\"共享文件夹都可以\",{\"1\":{\"14\":1}}],[\"随意就好\",{\"1\":{\"14\":1}}],[\"然后你就能看到\",{\"1\":{\"76\":1}}],[\"然后你可以关机进行下测试了\",{\"1\":{\"21\":1}}],[\"然后添加git\",{\"1\":{\"76\":1}}],[\"然后运行打包命令即可\",{\"1\":{\"75\":1}}],[\"然后找到我们刚刚创建的用户git的目录下\",{\"1\":{\"67\":1}}],[\"然后找到你的vdi保存位置\",{\"1\":{\"14\":1}}],[\"然后他就可以自己打包然后部署\",{\"1\":{\"64\":1}}],[\"然后将打包完成的代码一块提交给服务器\",{\"1\":{\"76\":1}}],[\"然后将这个目录易个主\",{\"1\":{\"68\":1}}],[\"然后将表格内容放到剪切板即可\",{\"1\":{\"61\":1}}],[\"然后将文件后缀名改为\",{\"1\":{\"14\":1}}],[\"然后在对应文章中直接使用就好\",{\"1\":{\"61\":1}}],[\"然后在client\",{\"1\":{\"61\":1}}],[\"然后在虚拟机中解压得到vtoyboot\",{\"1\":{\"14\":1}}],[\"然后就是把posts目录下的所有md文件读出来就好了\",{\"1\":{\"58\":1}}],[\"然后就可以愉快的将博客仓库放到服务器上了\",{\"1\":{\"70\":1}}],[\"然后就可以去平板上添加配置了\",{\"1\":{\"21\":1}}],[\"然后就可以启动系统开始安装系统了\",{\"1\":{\"14\":1}}],[\"然后我们在index\",{\"1\":{\"54\":1}}],[\"然后我们再配置一下请求拦截器和响应拦截器\",{\"1\":{\"44\":1}}],[\"然后我们就可以开始测试了\",{\"1\":{\"21\":1}}],[\"然后这下就好了\",{\"1\":{\"24\":1}}],[\"然后点击\",{\"1\":{\"21\":1}}],[\"然后进到windows中\",{\"1\":{\"21\":1}}],[\"然后输入的电脑的ip即可\",{\"1\":{\"20\":1}}],[\"然后大小看自己\",{\"1\":{\"14\":1}}],[\"然后可以按照如图配置\",{\"1\":{\"13\":1}}],[\"虚拟光盘设为系统镜像文件\",{\"1\":{\"14\":1}}],[\"之后\",{\"1\":{\"76\":1}}],[\"之后我们就可以进行局域网外的配置了\",{\"1\":{\"21\":1}}],[\"之后将硬盘中的wtg\",{\"1\":{\"13\":1}}],[\"之后点击部署即可\",{\"1\":{\"13\":1}}],[\"否则会系统无法启动\",{\"1\":{\"13\":1}}],[\"否则没有权限访问services\",{\"1\":{\"8\":1}}],[\"选择设备后直接安装即可\",{\"1\":{\"15\":1}}],[\"选择一个保存vdi的位置\",{\"1\":{\"14\":1}}],[\"选择从这块硬盘启动并完成wintogo的初始化\",{\"1\":{\"13\":1}}],[\"选择镜像路径\",{\"1\":{\"13\":1}}],[\"但总比服务器死机强多了\",{\"1\":{\"76\":1}}],[\"但也不建议小于60g\",{\"1\":{\"13\":1}}],[\"但是我发现了更简单的方法\",{\"1\":{\"76\":1}}],[\"但是\",{\"1\":{\"42\":1,\"64\":1,\"75\":1}}],[\"但是无法正常开机\",{\"0\":{\"24\":1}}],[\"但是官网上也没有其他的网卡驱动了\",{\"1\":{\"23\":1}}],[\"但是后来在解决其他问题的时候发现有帖子会说把他开开\",{\"1\":{\"21\":1}}],[\"但是问题出来了\",{\"1\":{\"20\":1}}],[\"但是重量很大\",{\"1\":{\"19\":1}}],[\"但是就是不知道问题\",{\"1\":{\"8\":1}}],[\"但是每次新建一个连接就要输密码\",{\"1\":{\"5\":1}}],[\"v\",{\"1\":{\"61\":1}}],[\"value\",{\"1\":{\"61\":5,\"80\":1}}],[\"vue组件\",{\"1\":{\"61\":1}}],[\"vuepress目录下创建components文件夹\",{\"1\":{\"61\":1}}],[\"vuepress表格点击复制组件\",{\"0\":{\"61\":1}}],[\"vuepress\",{\"1\":{\"61\":1,\"76\":3},\"2\":{\"60\":1,\"63\":1}}],[\"vuepress自动生成侧边栏目录\",{\"0\":{\"58\":1},\"1\":{\"58\":2}}],[\"vue\",{\"1\":{\"61\":2},\"2\":{\"57\":1,\"60\":1,\"63\":1}}],[\"version\",{\"1\":{\"16\":2}}],[\"ventoy基本配置\",{\"1\":{\"16\":1}}],[\"ventoy\",{\"0\":{\"15\":1},\"1\":{\"16\":8},\"2\":{\"18\":1}}],[\"ventoy安装程序\",{\"1\":{\"12\":1}}],[\"vim\",{\"1\":{\"67\":1,\"69\":1,\"75\":1}}],[\"visible\",{\"1\":{\"61\":5}}],[\"view\",{\"1\":{\"16\":1}}],[\"virtualbox\",{\"1\":{\"12\":1}}],[\"vdi\",{\"1\":{\"14\":1,\"16\":1}}],[\"vtoy\",{\"1\":{\"14\":3,\"16\":8}}],[\"vtoyboot\",{\"1\":{\"12\":1,\"14\":1}}],[\"vhdx\",{\"1\":{\"16\":1}}],[\"vhdx拷贝出来备用\",{\"1\":{\"13\":1}}],[\"vhdboot\",{\"1\":{\"12\":1}}],[\"vscode的远程属实是舒服\",{\"1\":{\"5\":1}}],[\"vscode远程连接免输密码\",{\"0\":{\"5\":1}}],[\"01\",{\"1\":{\"16\":1}}],[\"08\",{\"1\":{\"16\":1}}],[\"08002be10318\",{\"1\":{\"8\":1}}],[\"0ee9325c\",{\"1\":{\"16\":1}}],[\"0\",{\"1\":{\"16\":1,\"20\":1,\"58\":2,\"61\":5,\"81\":1}}],[\"04\",{\"1\":{\"12\":1,\"16\":3}}],[\"我看了好多例子都是用来做代码质量检测的\",{\"1\":{\"76\":1}}],[\"我以为是我本地的问题\",{\"1\":{\"75\":1}}],[\"我这边总是在push以后会卡住没有反应\",{\"1\":{\"75\":1}}],[\"我这里用的是ubuntu22\",{\"1\":{\"12\":1}}],[\"我就是单纯想这么搞而已\",{\"1\":{\"64\":1}}],[\"我就去realtek官网看了一下\",{\"1\":{\"23\":1}}],[\"我的所有文章都在src目录下的posts目录中\",{\"1\":{\"58\":1}}],[\"我的硬盘是256g的\",{\"1\":{\"13\":1}}],[\"我具体不是很清楚\",{\"1\":{\"55\":1}}],[\"我再翻攻略的时候也说了要把电源选项中的用于快速启动给关闭\",{\"1\":{\"24\":1}}],[\"我遇到的这种情况\",{\"1\":{\"24\":1}}],[\"我们只需要在收到更新后直接将仓库克隆下来就好\",{\"1\":{\"76\":1}}],[\"我们只需要调用之前封装好的tree类下的insert函数即可\",{\"1\":{\"58\":1}}],[\"我们首先需要在package\",{\"1\":{\"76\":1}}],[\"我们首先安装husky\",{\"1\":{\"76\":1}}],[\"我们随便找一个目录\",{\"1\":{\"75\":1}}],[\"我们在找到服务器的hooks目录\",{\"1\":{\"75\":1}}],[\"我们要编辑\",{\"1\":{\"69\":1}}],[\"我们不就是想让我们在push之后服务器去自动运行打包命令吗\",{\"1\":{\"74\":1}}],[\"我们不应该让git用户登录shell\",{\"1\":{\"69\":1}}],[\"我们不如直接检测一下电脑是否收到封包\",{\"1\":{\"21\":1}}],[\"我们创建我们的仓库\",{\"1\":{\"68\":1}}],[\"我们也需要这个来访问我们的git服务器\",{\"1\":{\"67\":1}}],[\"我们就可以在api目录下新建一个userapi\",{\"1\":{\"53\":1}}],[\"我们重构了项目\",{\"1\":{\"42\":1}}],[\"我们总要发起不少的请求\",{\"1\":{\"42\":1}}],[\"我们先从局域网内看起\",{\"1\":{\"21\":1}}],[\"我需要在校园里使用\",{\"1\":{\"20\":1}}],[\"我太清楚我的记忆能力了\",{\"1\":{\"11\":1}}],[\"任意linux发行版\",{\"1\":{\"12\":1}}],[\"准备\",{\"0\":{\"12\":1}}],[\"准备搞一个包含了windows\",{\"1\":{\"11\":1}}],[\"不懂的搜一下就好了\",{\"1\":{\"77\":1}}],[\"不懂的可以去官网查看\",{\"1\":{\"16\":1}}],[\"不挂梯子访问太慢了\",{\"1\":{\"64\":1}}],[\"不是就递归下去\",{\"1\":{\"58\":1}}],[\"不输出任何东西\",{\"1\":{\"24\":1}}],[\"不过免费的版本体验可能会不如todesk\",{\"1\":{\"20\":1}}],[\"不过这次的ip地址需要为学校的内网ip加上你设置的外部端口号\",{\"1\":{\"20\":1}}],[\"不过周期很长\",{\"1\":{\"20\":1}}],[\"不过十天保准忘的干干净净\",{\"1\":{\"11\":1}}],[\"不排除二般情况\",{\"1\":{\"20\":1}}],[\"不排除这个想法\",{\"1\":{\"8\":1}}],[\"不会解压iso文件的看这里\",{\"1\":{\"14\":1}}],[\"写这篇文章就是为了记录下过程\",{\"1\":{\"11\":1}}],[\"leave\",{\"1\":{\"61\":2}}],[\"left\",{\"1\":{\"61\":1,\"80\":1,\"81\":2}}],[\"length\",{\"1\":{\"58\":4}}],[\"let\",{\"1\":{\"46\":1,\"51\":1,\"53\":2,\"55\":1,\"58\":9}}],[\"link\",{\"1\":{\"58\":7}}],[\"linuxmint\",{\"1\":{\"16\":2}}],[\"linux\",{\"0\":{\"14\":1},\"1\":{\"11\":1,\"16\":5},\"2\":{\"18\":1}}],[\"listen\",{\"1\":{\"77\":2}}],[\"list\",{\"1\":{\"53\":1}}],[\"lang=\",{\"1\":{\"61\":1}}],[\"language\",{\"1\":{\"16\":1}}],[\"lan为局域网内\",{\"1\":{\"21\":1}}],[\"lan选项\",{\"1\":{\"21\":1}}],[\"lan选线\",{\"1\":{\"21\":1}}],[\"lan\",{\"1\":{\"21\":3}}],[\"location\",{\"1\":{\"77\":1}}],[\"localstorage\",{\"1\":{\"44\":1,\"45\":1,\"51\":2}}],[\"localhost\",{\"1\":{\"44\":1,\"51\":1}}],[\"local\",{\"1\":{\"8\":2}}],[\"logout\",{\"1\":{\"53\":2}}],[\"login\",{\"1\":{\"53\":2,\"55\":1}}],[\"look\",{\"1\":{\"16\":1}}],[\"又上pdd买了一个2230硬盘盒\",{\"1\":{\"11\":1}}],[\"又去看了一眼设备的状态信息\",{\"1\":{\"8\":1}}],[\"去到将我们自己电脑中的公钥复制一下\",{\"1\":{\"67\":1}}],[\"去到bios里\",{\"1\":{\"21\":1}}],[\"去咸鱼捡了一块256g的2230硬盘\",{\"1\":{\"11\":1}}],[\"去搜了一下\",{\"1\":{\"8\":1}}],[\"突发奇想\",{\"1\":{\"11\":1}}],[\"突然发现了一条之前从来没注意过的信息\",{\"1\":{\"8\":1}}],[\"某天刷视频刷到用u盘打造多合一多功能u盘\",{\"1\":{\"11\":1}}],[\"说明一下\",{\"1\":{\"58\":1}}],[\"说不定哪天你的注册表就在你晋级赛的时候狠狠的背刺你了😆\",{\"1\":{\"8\":1}}],[\"说vmware\",{\"1\":{\"8\":1}}],[\"就已经成功一半了\",{\"1\":{\"74\":1}}],[\"就一行一个\",{\"1\":{\"67\":1}}],[\"就是在git的工作流程中分为几个关键的时间节点\",{\"1\":{\"74\":1}}],[\"就是监听表格点击事件\",{\"1\":{\"61\":1}}],[\"就是把当前目录下内容拿过来看\",{\"1\":{\"58\":1}}],[\"就是把所有md文件拿过来\",{\"1\":{\"58\":1}}],[\"就是这个操作\",{\"1\":{\"24\":1}}],[\"就体现出平板加远程桌面的优势了\",{\"1\":{\"19\":1}}],[\"就算手动也要删干净\",{\"1\":{\"8\":1}}],[\"就在即将要重装时\",{\"1\":{\"8\":1}}],[\"卸载软件能用专用的卸载器就用吧\",{\"1\":{\"8\":1}}],[\"回答中也有问题的复现\",{\"1\":{\"8\":1}}],[\"解决这块参考了四海一叶秋大神的回答\",{\"1\":{\"8\":1}}],[\"删除重装网卡驱动就好\",{\"1\":{\"8\":1}}],[\"项\",{\"1\":{\"8\":1}}],[\"easy\",{\"1\":{\"76\":1}}],[\"ea6cade4227f\",{\"1\":{\"8\":1}}],[\"ecdhe\",{\"1\":{\"77\":1}}],[\"echo\",{\"1\":{\"75\":4,\"76\":7}}],[\"econnaborted\",{\"1\":{\"46\":1,\"51\":1}}],[\"etc\",{\"1\":{\"69\":2}}],[\"env\",{\"1\":{\"76\":1}}],[\"enter\",{\"1\":{\"61\":2}}],[\"enhance\",{\"1\":{\"61\":1}}],[\"encrypt\",{\"1\":{\"55\":1}}],[\"else\",{\"1\":{\"58\":2}}],[\"elementary\",{\"1\":{\"16\":2}}],[\"export\",{\"1\":{\"51\":1,\"53\":2,\"54\":1,\"58\":1,\"61\":1}}],[\"err\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":12}}],[\"error\",{\"1\":{\"45\":3,\"46\":6,\"51\":9,\"55\":1,\"58\":2}}],[\"e唤醒的之类的就开开\",{\"1\":{\"21\":1}}],[\"e\",{\"1\":{\"21\":1,\"61\":4,\"75\":1,\"76\":1}}],[\"editions\",{\"1\":{\"16\":2}}],[\"edgeless\",{\"1\":{\"16\":3}}],[\"eff0f1\",{\"1\":{\"16\":1}}],[\"efi\",{\"1\":{\"16\":1}}],[\"e325\",{\"1\":{\"8\":1}}],[\"443\",{\"1\":{\"77\":1}}],[\"45\",{\"1\":{\"70\":2}}],[\"4554\",{\"1\":{\"8\":1}}],[\"40px\",{\"1\":{\"61\":1}}],[\"4\",{\"1\":{\"16\":1,\"80\":1}}],[\"48\",{\"1\":{\"16\":1}}],[\"4252\",{\"1\":{\"8\":1}}],[\"49444745\",{\"1\":{\"8\":1}}],[\"4d36e974\",{\"1\":{\"8\":1}}],[\"中的\",{\"1\":{\"8\":1}}],[\"ssl\",{\"1\":{\"77\":7}}],[\"ssh文件夹就创建\",{\"1\":{\"67\":1}}],[\"ssh\",{\"1\":{\"67\":4}}],[\"sample并重命名\",{\"1\":{\"75\":1}}],[\"sample拷贝一份\",{\"1\":{\"75\":1}}],[\"sample\",{\"1\":{\"68\":2,\"70\":1,\"75\":1}}],[\"sudo\",{\"1\":{\"65\":1,\"68\":2}}],[\"sum\",{\"1\":{\"53\":1}}],[\"size\",{\"1\":{\"61\":1}}],[\"sitedata\",{\"1\":{\"61\":1}}],[\"scripts\",{\"1\":{\"76\":1}}],[\"scoped>\",{\"1\":{\"61\":1}}],[\"scss\",{\"1\":{\"61\":1}}],[\"split\",{\"1\":{\"58\":1}}],[\"src\",{\"1\":{\"43\":1,\"58\":1,\"76\":3}}],[\"struct\",{\"1\":{\"80\":1}}],[\"statsync\",{\"1\":{\"58\":1}}],[\"store中貌似叫remote\",{\"1\":{\"20\":1}}],[\"style>\",{\"1\":{\"61\":1}}],[\"style\",{\"1\":{\"16\":1,\"61\":1}}],[\"solus\",{\"1\":{\"16\":2}}],[\"session\",{\"1\":{\"77\":1}}],[\"server\",{\"1\":{\"77\":5}}],[\"services\",{\"1\":{\"8\":1}}],[\"select\",{\"1\":{\"61\":1}}],[\"set\",{\"1\":{\"75\":1,\"76\":1}}],[\"settimeout\",{\"1\":{\"61\":1}}],[\"setdata\",{\"1\":{\"58\":1}}],[\"search\",{\"1\":{\"16\":1}}],[\"secondary\",{\"1\":{\"16\":1}}],[\"sha256\",{\"1\":{\"77\":1}}],[\"shell登录一次就退出了\",{\"1\":{\"69\":1}}],[\"shell\",{\"1\":{\"69\":1}}],[\"shift\",{\"1\":{\"58\":1}}],[\"sh即可\",{\"1\":{\"14\":1}}],[\"sh\",{\"1\":{\"14\":1,\"76\":2}}],[\"system\",{\"1\":{\"8\":2}}],[\"ciphers\",{\"1\":{\"77\":2}}],[\"cert\",{\"1\":{\"77\":2}}],[\"certificate\",{\"1\":{\"77\":2}}],[\"center\",{\"1\":{\"61\":2}}],[\"centos\",{\"1\":{\"16\":3}}],[\"cp\",{\"1\":{\"75\":1,\"76\":1}}],[\"cd\",{\"1\":{\"67\":1,\"68\":1,\"75\":2,\"76\":1}}],[\"cursor\",{\"1\":{\"61\":1}}],[\"currentcontrolset\",{\"1\":{\"8\":2}}],[\"can\",{\"1\":{\"58\":1}}],[\"catch\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6,\"55\":1}}],[\"cat=109\",{\"1\":{\"16\":1}}],[\"chown\",{\"1\":{\"68\":1}}],[\"chmod\",{\"1\":{\"67\":1}}],[\"child\",{\"1\":{\"58\":4}}],[\"children\",{\"1\":{\"58\":14}}],[\"charset=utf\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":4}}],[\"cheatsheet\",{\"2\":{\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"34\":1,\"35\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1}}],[\"createappointment\",{\"1\":{\"53\":1}}],[\"create\",{\"1\":{\"44\":1,\"51\":1}}],[\"clean\",{\"1\":{\"75\":1,\"76\":1}}],[\"cleaning\",{\"1\":{\"75\":1,\"76\":1}}],[\"clone\",{\"1\":{\"70\":2}}],[\"clipboard\",{\"1\":{\"61\":1}}],[\"click\",{\"1\":{\"61\":1}}],[\"client\",{\"1\":{\"20\":1,\"61\":1}}],[\"class=\",{\"1\":{\"61\":1}}],[\"class\",{\"1\":{\"16\":23,\"58\":2}}],[\"commit之前都会运行这个脚本\",{\"1\":{\"76\":1}}],[\"commit的脚本\",{\"1\":{\"76\":1}}],[\"commit\",{\"1\":{\"76\":2}}],[\"commits\",{\"1\":{\"76\":1}}],[\"components\",{\"1\":{\"61\":1}}],[\"component\",{\"1\":{\"43\":1,\"61\":1}}],[\"collapsible\",{\"1\":{\"58\":8}}],[\"color\",{\"1\":{\"16\":1,\"61\":2}}],[\"code\",{\"1\":{\"46\":2,\"51\":2,\"61\":2,\"75\":1,\"76\":1}}],[\"content\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":6,\"61\":6}}],[\"control\",{\"1\":{\"8\":2,\"16\":1}}],[\"config\",{\"1\":{\"45\":3,\"51\":3}}],[\"console\",{\"1\":{\"45\":1,\"51\":1}}],[\"constructor\",{\"1\":{\"58\":2}}],[\"const\",{\"1\":{\"44\":1,\"45\":1,\"51\":2,\"54\":1,\"58\":1,\"61\":6}}],[\"consumer\",{\"1\":{\"16\":2}}],[\"cn进入后台管理\",{\"1\":{\"20\":1}}],[\"cn\",{\"1\":{\"16\":4}}],[\"high\",{\"1\":{\"77\":1}}],[\"hirens\",{\"1\":{\"16\":1}}],[\"husky目录下多了一个pre\",{\"1\":{\"76\":1}}],[\"husky目录下配置\",{\"1\":{\"76\":1}}],[\"husky目录并指定该目录为git\",{\"1\":{\"76\":1}}],[\"husky会管理我们的脚本将在git生命周期的哪个阶段运行\",{\"1\":{\"76\":1}}],[\"husky\",{\"0\":{\"76\":1},\"1\":{\"76\":12}}],[\"hard\",{\"1\":{\"75\":2,\"76\":1}}],[\"hooks所在的目录\",{\"1\":{\"76\":1}}],[\"hooks在提交前打包是百分百可行的\",{\"1\":{\"76\":1}}],[\"hooks的自定义脚本位置就在仓库的hooks目录中\",{\"1\":{\"75\":1}}],[\"hooks\",{\"0\":{\"74\":1},\"1\":{\"73\":1,\"74\":1,\"75\":1,\"76\":3},\"2\":{\"79\":1}}],[\"hooks自动打包部署\",{\"0\":{\"73\":1}}],[\"home\",{\"1\":{\"67\":1,\"69\":4}}],[\"height\",{\"1\":{\"61\":1}}],[\"headers\",{\"1\":{\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":8}}],[\"hello\",{\"0\":{\"1\":1}}],[\"https\",{\"1\":{\"77\":1}}],[\"http\",{\"1\":{\"44\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":7,\"53\":2}}],[\"htmlelement\",{\"1\":{\"61\":2}}],[\"html\",{\"1\":{\"16\":1,\"77\":1}}],[\"h\",{\"1\":{\"24\":1}}],[\"hkey\",{\"1\":{\"8\":2}}],[\"导致驱动程序出现了问题\",{\"1\":{\"8\":1}}],[\"注册表还有残留\",{\"1\":{\"8\":1}}],[\"离离原上谱\",{\"1\":{\"8\":1}}],[\"具体内容很好写\",{\"1\":{\"75\":1}}],[\"具体怎么安装可以看自己的服务器用的什么包管理工具\",{\"1\":{\"65\":1}}],[\"具体匹配可以看这里https\",{\"1\":{\"16\":1}}],[\"具体下边的路径就根据自己的来写\",{\"1\":{\"16\":1}}],[\"具体看这里\",{\"1\":{\"8\":1}}],[\"具体思路就是排查\",{\"1\":{\"8\":1}}],[\"关键信息\",{\"1\":{\"8\":1}}],[\"好了现在可以远程了\",{\"1\":{\"20\":1}}],[\"好家伙\",{\"1\":{\"8\":1,\"75\":1}}],[\"好不容易找到的思路又断了\",{\"1\":{\"8\":1}}],[\"可视化更方便\",{\"1\":{\"70\":1}}],[\"可以参考这篇教程\",{\"1\":{\"70\":1}}],[\"可以参考这里\",{\"1\":{\"13\":1}}],[\"可以去这篇文章中下载\",{\"1\":{\"21\":1}}],[\"可以打开cmd\",{\"1\":{\"20\":1}}],[\"可是他已经在好久之前卸载了这个软件\",{\"1\":{\"8\":1}}],[\"可能性也不是无\",{\"1\":{\"8\":1}}],[\"差那么一点就走上重装的不归路了\",{\"1\":{\"8\":1}}],[\"思路一下就断了\",{\"1\":{\"8\":1}}],[\"吃个饭的时间windows也不至于自己安了几个软件程序造成冲突吧\",{\"1\":{\"8\":1}}],[\"吃饭回来就没网了\",{\"1\":{\"8\":1}}],[\"吃饭前还在打游戏\",{\"1\":{\"8\":1}}],[\"上边的1\",{\"1\":{\"8\":1}}],[\"据当事人说法\",{\"1\":{\"8\":1}}],[\"驱动程序冲突\",{\"1\":{\"8\":1}}],[\"驱动有问题了\",{\"1\":{\"8\":1}}],[\"拆开看下就好了\",{\"1\":{\"8\":1}}],[\"更新的系统和驱动不兼容\",{\"1\":{\"8\":1}}],[\"万不得已的选项\",{\"1\":{\"8\":1}}],[\"这点vuepress官方文档都有写\",{\"1\":{\"61\":1}}],[\"这一步有时很重要\",{\"1\":{\"45\":1,\"51\":1}}],[\"这样做可以确保在脚本中使用的\",{\"1\":{\"75\":1}}],[\"这样服务器就会在仓库内容更新后运行该脚本\",{\"1\":{\"75\":1}}],[\"这样git用户可以正常通过ssh使用git\",{\"1\":{\"69\":1}}],[\"这样子可能看上去没什么问题\",{\"1\":{\"42\":1}}],[\"这样就可以了\",{\"1\":{\"20\":1}}],[\"这问题的根本原因找到了\",{\"1\":{\"23\":1}}],[\"这次的区别就是\",{\"1\":{\"21\":1}}],[\"这次添加的是局域网外的配置\",{\"1\":{\"21\":1}}],[\"这些东西不难拿到\",{\"1\":{\"21\":1}}],[\"这是其一\",{\"1\":{\"20\":1}}],[\"这是一次离谱的windows无线网络突然消失事件的记录\",{\"1\":{\"8\":1}}],[\"这时再回到封包监控诊断工具\",{\"1\":{\"21\":1}}],[\"这时候我们就要改一下服务器那边的post\",{\"1\":{\"76\":1}}],[\"这时候就体现出来封装axios和统一管理api的重要性了\",{\"1\":{\"42\":1}}],[\"这时候就需要修改路由器的设置\",{\"1\":{\"20\":1}}],[\"这时候你就要查一下你电脑的ip地址是否变化了\",{\"1\":{\"21\":1}}],[\"这时候\",{\"1\":{\"19\":1}}],[\"这时突然找到了一个帖子\",{\"1\":{\"8\":1}}],[\"这步一定要有\",{\"1\":{\"13\":1}}],[\"这里用的vuepress打包命令为npm\",{\"1\":{\"75\":1}}],[\"这里应该是\",{\"1\":{\"69\":1}}],[\"这里我们以放在\",{\"1\":{\"68\":1}}],[\"这里我选择用一棵树来存放目录结构\",{\"1\":{\"58\":1}}],[\"这里我用的是wolon\",{\"1\":{\"21\":1}}],[\"这里更推荐非对称加密\",{\"1\":{\"55\":1}}],[\"这里就要用到我们的git\",{\"1\":{\"73\":1}}],[\"这里就用到wakeonlan这个软件\",{\"1\":{\"21\":1}}],[\"这里就说下找什么\",{\"1\":{\"21\":1}}],[\"这里的popup随便实现一下就好\",{\"1\":{\"61\":1}}],[\"这里的默认根路径是\",{\"1\":{\"16\":1}}],[\"这里的屏蔽本机磁盘我没有开启\",{\"1\":{\"13\":1}}],[\"这里推荐直接在后边加\",{\"1\":{\"14\":1}}],[\"这里推荐精简版的\",{\"1\":{\"12\":1}}],[\"这里一定要启用efi\",{\"1\":{\"14\":1}}],[\"这个方法看来是走不通了\",{\"1\":{\"75\":1}}],[\"这个应该是正常运行的\",{\"1\":{\"75\":1}}],[\"这个路径只是例子\",{\"1\":{\"75\":1}}],[\"这个也很好理解\",{\"1\":{\"67\":1}}],[\"这个也比较简单\",{\"1\":{\"8\":1}}],[\"这个用户组和用户名都是随意的\",{\"1\":{\"66\":1}}],[\"这个功能实现很简单\",{\"1\":{\"61\":1}}],[\"这个很简单\",{\"1\":{\"61\":1}}],[\"这个是可以传一些配置文件的\",{\"1\":{\"58\":1}}],[\"这个函数也很好理解\",{\"1\":{\"58\":1}}],[\"这个问题很简单了吧\",{\"1\":{\"81\":1}}],[\"这个问题有好多方法\",{\"1\":{\"64\":1}}],[\"这个问题也很好解决\",{\"1\":{\"24\":1}}],[\"这个问题还真就和vmware有关系\",{\"1\":{\"8\":1}}],[\"这个大概率是网卡驱动的问题\",{\"1\":{\"23\":1}}],[\"这个网关地址不确定的话就在填写完ip地址后点击网关输入框右边的一个不知道是什么的小图标\",{\"1\":{\"21\":1}}],[\"这个软件是来自dcchen写的文章\",{\"1\":{\"21\":1}}],[\"这个不确定用不用开\",{\"1\":{\"21\":1}}],[\"这个远程唤醒我可谓是踩了一万个坑\",{\"1\":{\"21\":1}}],[\"这个ip地址可能会变化\",{\"1\":{\"20\":1}}],[\"这个还是比较好实现的\",{\"1\":{\"20\":1}}],[\"这个顺序无所谓\",{\"1\":{\"16\":1}}],[\"这个要记好\",{\"1\":{\"14\":1}}],[\"这个操作需要用到nsudo\",{\"1\":{\"8\":1}}],[\"这事听起来也是离奇\",{\"1\":{\"8\":1}}],[\"这种情况要么回退\",{\"1\":{\"8\":1}}],[\"这种情况就直接上官网找驱动就好\",{\"1\":{\"8\":1}}],[\"这软件最初还是很好的\",{\"1\":{\"8\":1}}],[\"一举两得\",{\"1\":{\"64\":1}}],[\"一定要选上预先分配全部空间\",{\"1\":{\"14\":1}}],[\"一定看准硬盘是不是要安装的那一块\",{\"1\":{\"13\":1}}],[\"一般在~\",{\"1\":{\"67\":1}}],[\"一般都有\",{\"1\":{\"20\":1}}],[\"一般为40g\",{\"1\":{\"14\":1}}],[\"一般来说有这几种解决办法\",{\"1\":{\"8\":1}}],[\"一个是不带电源管理的\",{\"1\":{\"23\":1}}],[\"一个删了好久的软件还能对windows造成伤害\",{\"1\":{\"8\":1}}],[\"一个月能写一篇文章就是胜利✌️\",{\"1\":{\"4\":1}}],[\"一个在读的大烂王\",{\"1\":{\"4\":1}}],[\"起初我也是见怪不怪了\",{\"1\":{\"8\":1}}],[\"死去的软件也能跑来背刺\",{\"1\":{\"8\":1}}],[\"woof\",{\"1\":{\"76\":1}}],[\"workspace\",{\"1\":{\"75\":2,\"76\":2}}],[\"workstation的存在可能会导致无线网卡驱动错误\",{\"1\":{\"8\":1}}],[\"work\",{\"1\":{\"75\":1,\"76\":1}}],[\"world\",{\"0\":{\"1\":1}}],[\"writetext\",{\"1\":{\"61\":1}}],[\"while\",{\"1\":{\"58\":1}}],[\"warn\",{\"1\":{\"45\":1,\"51\":1}}],[\"wan为局域网外\",{\"1\":{\"21\":1}}],[\"wake\",{\"1\":{\"21\":3}}],[\"width\",{\"1\":{\"61\":1}}],[\"widgets\",{\"1\":{\"21\":1}}],[\"win+r\",{\"1\":{\"20\":1}}],[\"win\",{\"1\":{\"16\":1}}],[\"wintogo\",{\"1\":{\"16\":2}}],[\"win10精简版可以到这里下载\",{\"1\":{\"12\":1}}],[\"win10或win11镜像\",{\"1\":{\"12\":1}}],[\"windows下~为用户目录\",{\"1\":{\"67\":1}}],[\"windows10\",{\"1\":{\"16\":2}}],[\"windows\",{\"0\":{\"13\":1},\"1\":{\"16\":11},\"2\":{\"10\":1,\"18\":1}}],[\"windows仍在设置此设备的类配置\",{\"1\":{\"8\":1}}],[\"windows发癫了\",{\"1\":{\"8\":1}}],[\"windows网卡驱动掉了不是很正常的事嘛\",{\"1\":{\"8\":1}}],[\"windows无线网络突然消失\",{\"0\":{\"8\":1},\"1\":{\"58\":2}}],[\"www\",{\"1\":{\"16\":2,\"76\":1}}],[\"wtg辅助工具\",{\"1\":{\"12\":1}}],[\"服务器一运行打包命令就死机\",{\"1\":{\"75\":1}}],[\"服务器客户端都有\",{\"1\":{\"75\":1}}],[\"服务器\",{\"2\":{\"7\":1}}],[\"瞎折腾\",{\"0\":{\"87\":1},\"1\":{\"58\":2},\"2\":{\"6\":1,\"9\":1,\"17\":1,\"25\":1,\"71\":1,\"78\":1}}],[\"免密登录才是王道\",{\"1\":{\"5\":1}}],[\"对于我这种经常开一堆窗口的人来说是非常不便利的\",{\"1\":{\"5\":1}}],[\"瓦真好玩\",{\"1\":{\"4\":1}}],[\"个人介绍\",{\"0\":{\"4\":1}}],[\"介绍\",{\"2\":{\"3\":1}}],[\"笔记\",{\"2\":{\"2\":1}}],[\"正在持续更新中\",{\"1\":{\"1\":1}}],[\"此博客用来记录学习的笔记和快乐的debug过程\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,Et(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
